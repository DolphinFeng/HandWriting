/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.98.1
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
define(["./Transforms-a9503dfe","./Matrix2-387f8f26","./defaultValue-89a13f50","./ComponentDatatype-db8f58a6","./ArcType-dff9a34b","./arrayRemoveDuplicates-d98580c0","./EllipsoidGeodesic-ddfdc0e2","./EllipsoidRhumbLine-3a0dd668","./EncodedCartesian3-da50618b","./GeometryAttribute-c28edea0","./IntersectionTests-a10643a2","./Plane-b9e7006f","./WebMercatorProjection-858bec7d","./combine-cab8776d","./RuntimeError-7605ca09","./WebGLConstants-eaab9970"],(function(e,t,a,n,i,r,s,o,l,c,u,C,d,p,h,g){"use strict";function f(n){n=a.defaultValue(n,a.defaultValue.EMPTY_OBJECT),this._ellipsoid=a.defaultValue(n.ellipsoid,t.Ellipsoid.WGS84),this._rectangle=a.defaultValue(n.rectangle,t.Rectangle.MAX_VALUE),this._projection=new e.GeographicProjection(this._ellipsoid),this._numberOfLevelZeroTilesX=a.defaultValue(n.numberOfLevelZeroTilesX,2),this._numberOfLevelZeroTilesY=a.defaultValue(n.numberOfLevelZeroTilesY,1)}Object.defineProperties(f.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},rectangle:{get:function(){return this._rectangle}},projection:{get:function(){return this._projection}}}),f.prototype.getNumberOfXTilesAtLevel=function(e){return this._numberOfLevelZeroTilesX<<e},f.prototype.getNumberOfYTilesAtLevel=function(e){return this._numberOfLevelZeroTilesY<<e},f.prototype.rectangleToNativeRectangle=function(e,i){const r=n.CesiumMath.toDegrees(e.west),s=n.CesiumMath.toDegrees(e.south),o=n.CesiumMath.toDegrees(e.east),l=n.CesiumMath.toDegrees(e.north);return a.defined(i)?(i.west=r,i.south=s,i.east=o,i.north=l,i):new t.Rectangle(r,s,o,l)},f.prototype.tileXYToNativeRectangle=function(e,t,a,i){const r=this.tileXYToRectangle(e,t,a,i);return r.west=n.CesiumMath.toDegrees(r.west),r.south=n.CesiumMath.toDegrees(r.south),r.east=n.CesiumMath.toDegrees(r.east),r.north=n.CesiumMath.toDegrees(r.north),r},f.prototype.tileXYToRectangle=function(e,n,i,r){const s=this._rectangle,o=this.getNumberOfXTilesAtLevel(i),l=this.getNumberOfYTilesAtLevel(i),c=s.width/o,u=e*c+s.west,C=(e+1)*c+s.west,d=s.height/l,p=s.north-n*d,h=s.north-(n+1)*d;return a.defined(r)||(r=new t.Rectangle(u,h,C,p)),r.west=u,r.south=h,r.east=C,r.north=p,r},f.prototype.positionToTileXY=function(e,i,r){const s=this._rectangle;if(!t.Rectangle.contains(s,e))return;const o=this.getNumberOfXTilesAtLevel(i),l=this.getNumberOfYTilesAtLevel(i),c=s.width/o,u=s.height/l;let C=e.longitude;s.east<s.west&&(C+=n.CesiumMath.TWO_PI);let d=(C-s.west)/c|0;d>=o&&(d=o-1);let p=(s.north-e.latitude)/u|0;return p>=l&&(p=l-1),a.defined(r)?(r.x=d,r.y=p,r):new t.Cartesian2(d,p)};const m=new t.Cartesian3,w=new t.Cartesian3,y=new t.Cartographic,M=new t.Cartesian3,T=new t.Cartesian3,E=new e.BoundingSphere,_=new f,O=[new t.Cartographic,new t.Cartographic,new t.Cartographic,new t.Cartographic],b=new t.Cartesian2,P={};function A(e){t.Cartographic.fromRadians(e.east,e.north,0,O[0]),t.Cartographic.fromRadians(e.west,e.north,0,O[1]),t.Cartographic.fromRadians(e.east,e.south,0,O[2]),t.Cartographic.fromRadians(e.west,e.south,0,O[3]);let a=0,n=0,i=0,r=0;const s=P._terrainHeightsMaxLevel;let o;for(o=0;o<=s;++o){let e=!1;for(let t=0;t<4;++t){const a=O[t];if(_.positionToTileXY(a,o,b),0===t)i=b.x,r=b.y;else if(i!==b.x||r!==b.y){e=!0;break}}if(e)break;a=i,n=r}if(0!==o)return{x:a,y:n,level:o>s?s:o-1}}P.initialize=function(){let t=P._initPromise;return a.defined(t)||(t=e.Resource.fetchJson(e.buildModuleUrl("Assets/approximateTerrainHeights.json")).then((function(e){P._terrainHeights=e})),P._initPromise=t),t},P.getMinimumMaximumHeights=function(e,n){n=a.defaultValue(n,t.Ellipsoid.WGS84);const i=A(e);let r=P._defaultMinTerrainHeight,s=P._defaultMaxTerrainHeight;if(a.defined(i)){const o=`${i.level}-${i.x}-${i.y}`,l=P._terrainHeights[o];a.defined(l)&&(r=l[0],s=l[1]),n.cartographicToCartesian(t.Rectangle.northeast(e,y),m),n.cartographicToCartesian(t.Rectangle.southwest(e,y),w),t.Cartesian3.midpoint(w,m,M);const c=n.scaleToGeodeticSurface(M,T);if(a.defined(c)){const e=t.Cartesian3.distance(M,c);r=Math.min(r,-e)}else r=P._defaultMinTerrainHeight}return r=Math.max(P._defaultMinTerrainHeight,r),{minimumTerrainHeight:r,maximumTerrainHeight:s}},P.getBoundingSphere=function(n,i){i=a.defaultValue(i,t.Ellipsoid.WGS84);const r=A(n);let s=P._defaultMaxTerrainHeight;if(a.defined(r)){const e=`${r.level}-${r.x}-${r.y}`,t=P._terrainHeights[e];a.defined(t)&&(s=t[1])}const o=e.BoundingSphere.fromRectangle3D(n,i,0);return e.BoundingSphere.fromRectangle3D(n,i,s,E),e.BoundingSphere.union(o,E,o)},P._terrainHeightsMaxLevel=6,P._defaultMaxTerrainHeight=9e3,P._defaultMinTerrainHeight=-1e5,P._terrainHeights=void 0,P._initPromise=void 0,Object.defineProperties(P,{initialized:{get:function(){return a.defined(P._terrainHeights)}}});var k=P;const L=[e.GeographicProjection,d.WebMercatorProjection],S=L.length,x=Math.cos(n.CesiumMath.toRadians(30)),I=Math.cos(n.CesiumMath.toRadians(150)),N=0,R=1e3;function D(e){const n=(e=a.defaultValue(e,a.defaultValue.EMPTY_OBJECT)).positions;this.width=a.defaultValue(e.width,1),this._positions=n,this.granularity=a.defaultValue(e.granularity,9999),this.loop=a.defaultValue(e.loop,!1),this.arcType=a.defaultValue(e.arcType,i.ArcType.GEODESIC),this._ellipsoid=t.Ellipsoid.WGS84,this._projectionIndex=0,this._workerName="createGroundPolylineGeometry",this._scene3DOnly=!1}Object.defineProperties(D.prototype,{packedLength:{get:function(){return 1+3*this._positions.length+1+1+1+t.Ellipsoid.packedLength+1+1}}}),D.setProjectionAndEllipsoid=function(e,t){let a=0;for(let e=0;e<S;e++)if(t instanceof L[e]){a=e;break}e._projectionIndex=a,e._ellipsoid=t.ellipsoid};const v=new t.Cartesian3,z=new t.Cartesian3,H=new t.Cartesian3;function B(e,a,n,i,r){const s=X(i,e,0,v),o=X(i,e,n,z),l=X(i,a,0,H),c=W(o,s,z),u=W(l,s,H);return t.Cartesian3.cross(u,c,r),t.Cartesian3.normalize(r,r)}const V=new t.Cartographic,j=new t.Cartesian3,G=new t.Cartesian3,Y=new t.Cartesian3;function F(e,a,n,r,l,c,u,C,d,p,h){if(0===l)return;let g;c===i.ArcType.GEODESIC?g=new s.EllipsoidGeodesic(e,a,u):c===i.ArcType.RHUMB&&(g=new o.EllipsoidRhumbLine(e,a,u));const f=g.surfaceDistance;if(f<l)return;const m=B(e,a,r,u,Y),w=Math.ceil(f/l),y=f/w;let M=y;const T=w-1;let E=C.length;for(let e=0;e<T;e++){const e=g.interpolateUsingSurfaceDistance(M,V),a=X(u,e,n,j),i=X(u,e,r,G);t.Cartesian3.pack(m,C,E),t.Cartesian3.pack(a,d,E),t.Cartesian3.pack(i,p,E),h.push(e.latitude),h.push(e.longitude),E+=3,M+=y}}const q=new t.Cartographic;function X(e,a,n,i){return t.Cartographic.clone(a,q),q.height=n,t.Cartographic.toCartesian(q,e,i)}function W(e,a,n){return t.Cartesian3.subtract(e,a,n),t.Cartesian3.normalize(n,n),n}function U(e,a,n,i){return i=W(e,a,i),i=t.Cartesian3.cross(i,n,i),i=t.Cartesian3.normalize(i,i),i=t.Cartesian3.cross(n,i,i)}D.pack=function(e,n,i){let r=a.defaultValue(i,0);const s=e._positions,o=s.length;n[r++]=o;for(let e=0;e<o;++e){const a=s[e];t.Cartesian3.pack(a,n,r),r+=3}return n[r++]=e.granularity,n[r++]=e.loop?1:0,n[r++]=e.arcType,t.Ellipsoid.pack(e._ellipsoid,n,r),r+=t.Ellipsoid.packedLength,n[r++]=e._projectionIndex,n[r++]=e._scene3DOnly?1:0,n},D.unpack=function(e,n,i){let r=a.defaultValue(n,0);const s=e[r++],o=new Array(s);for(let a=0;a<s;a++)o[a]=t.Cartesian3.unpack(e,r),r+=3;const l=e[r++],c=1===e[r++],u=e[r++],C=t.Ellipsoid.unpack(e,r);r+=t.Ellipsoid.packedLength;const d=e[r++],p=1===e[r++];return a.defined(i)||(i=new D({positions:o})),i._positions=o,i.granularity=l,i.loop=c,i.arcType=u,i._ellipsoid=C,i._projectionIndex=d,i._scene3DOnly=p,i};const Z=new t.Cartesian3,$=new t.Cartesian3,J=new t.Cartesian3,Q=new t.Cartesian3;function K(e,a,i,r,s){const o=W(i,a,Q),l=U(e,a,o,Z),c=U(r,a,o,$);if(n.CesiumMath.equalsEpsilon(t.Cartesian3.dot(l,c),-1,n.CesiumMath.EPSILON5))return s=t.Cartesian3.cross(o,l,s),s=t.Cartesian3.normalize(s,s);s=t.Cartesian3.add(c,l,s),s=t.Cartesian3.normalize(s,s);const u=t.Cartesian3.cross(o,s,J);return t.Cartesian3.dot(c,u)<0&&(s=t.Cartesian3.negate(s,s)),s}const ee=C.Plane.fromPointNormal(t.Cartesian3.ZERO,t.Cartesian3.UNIT_Y),te=new t.Cartesian3,ae=new t.Cartesian3,ne=new t.Cartesian3,ie=new t.Cartesian3,re=new t.Cartesian3,se=new t.Cartesian3,oe=new t.Cartographic,le=new t.Cartographic,ce=new t.Cartographic;D.createGeometry=function(s){const C=!s._scene3DOnly;let d=s.loop;const p=s._ellipsoid,h=s.granularity,g=s.arcType,f=new L[s._projectionIndex](p),m=N,w=R;let y,M;const T=s._positions,E=T.length;let _,O,b,P;2===E&&(d=!1);const A=new o.EllipsoidRhumbLine(void 0,void 0,p);let S,I,D;const v=[T[0]];for(M=0;M<E-1;M++)_=T[M],O=T[M+1],S=u.IntersectionTests.lineSegmentPlane(_,O,ee,se),!a.defined(S)||t.Cartesian3.equalsEpsilon(S,_,n.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(S,O,n.CesiumMath.EPSILON7)||(s.arcType===i.ArcType.GEODESIC?v.push(t.Cartesian3.clone(S)):s.arcType===i.ArcType.RHUMB&&(D=p.cartesianToCartographic(S,oe).longitude,b=p.cartesianToCartographic(_,oe),P=p.cartesianToCartographic(O,le),A.setEndPoints(b,P),I=A.findIntersectionWithLongitude(D,ce),S=p.cartographicToCartesian(I,se),!a.defined(S)||t.Cartesian3.equalsEpsilon(S,_,n.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(S,O,n.CesiumMath.EPSILON7)||v.push(t.Cartesian3.clone(S)))),v.push(O);d&&(_=T[E-1],O=T[0],S=u.IntersectionTests.lineSegmentPlane(_,O,ee,se),!a.defined(S)||t.Cartesian3.equalsEpsilon(S,_,n.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(S,O,n.CesiumMath.EPSILON7)||(s.arcType===i.ArcType.GEODESIC?v.push(t.Cartesian3.clone(S)):s.arcType===i.ArcType.RHUMB&&(D=p.cartesianToCartographic(S,oe).longitude,b=p.cartesianToCartographic(_,oe),P=p.cartesianToCartographic(O,le),A.setEndPoints(b,P),I=A.findIntersectionWithLongitude(D,ce),S=p.cartographicToCartesian(I,se),!a.defined(S)||t.Cartesian3.equalsEpsilon(S,_,n.CesiumMath.EPSILON7)||t.Cartesian3.equalsEpsilon(S,O,n.CesiumMath.EPSILON7)||v.push(t.Cartesian3.clone(S)))));let z=v.length,H=new Array(z);for(M=0;M<z;M++){const e=t.Cartographic.fromCartesian(v[M],p);e.height=0,H[M]=e}if(H=r.arrayRemoveDuplicates(H,t.Cartographic.equalsEpsilon),z=H.length,z<2)return;const V=[],j=[],G=[],Y=[];let q=te,U=ae,Z=ne,$=ie,J=re;const Q=H[0],ue=H[1];for(q=X(p,H[z-1],m,q),$=X(p,ue,m,$),U=X(p,Q,m,U),Z=X(p,Q,w,Z),J=d?K(q,U,Z,$,J):B(Q,ue,w,p,J),t.Cartesian3.pack(J,j,0),t.Cartesian3.pack(U,G,0),t.Cartesian3.pack(Z,Y,0),V.push(Q.latitude),V.push(Q.longitude),F(Q,ue,m,w,h,g,p,j,G,Y,V),M=1;M<z-1;++M){q=t.Cartesian3.clone(U,q),U=t.Cartesian3.clone($,U);const e=H[M];X(p,e,w,Z),X(p,H[M+1],m,$),K(q,U,Z,$,J),y=j.length,t.Cartesian3.pack(J,j,y),t.Cartesian3.pack(U,G,y),t.Cartesian3.pack(Z,Y,y),V.push(e.latitude),V.push(e.longitude),F(H[M],H[M+1],m,w,h,g,p,j,G,Y,V)}const Ce=H[z-1],de=H[z-2];if(U=X(p,Ce,m,U),Z=X(p,Ce,w,Z),d){const e=H[0];q=X(p,de,m,q),$=X(p,e,m,$),J=K(q,U,Z,$,J)}else J=B(de,Ce,w,p,J);if(y=j.length,t.Cartesian3.pack(J,j,y),t.Cartesian3.pack(U,G,y),t.Cartesian3.pack(Z,Y,y),V.push(Ce.latitude),V.push(Ce.longitude),d){for(F(Ce,Q,m,w,h,g,p,j,G,Y,V),y=j.length,M=0;M<3;++M)j[y+M]=j[M],G[y+M]=G[M],Y[y+M]=Y[M];V.push(Q.latitude),V.push(Q.longitude)}return function(a,i,r,s,o,u,C){let d,p;const h=i._ellipsoid,g=r.length/3-1,f=8*g,m=4*f,w=36*g,y=f>65535?new Uint32Array(w):new Uint16Array(w),M=new Float64Array(3*f),T=new Float32Array(m),E=new Float32Array(m),_=new Float32Array(m),O=new Float32Array(m),b=new Float32Array(m);let P,A,L,S;C&&(P=new Float32Array(m),A=new Float32Array(m),L=new Float32Array(m),S=new Float32Array(2*f));const I=u.length/2;let N=0;const R=Oe;R.height=0;const D=be;D.height=0;let v=Pe,z=Ae;if(C)for(p=0,d=1;d<I;d++)R.latitude=u[p],R.longitude=u[p+1],D.latitude=u[p+2],D.longitude=u[p+3],v=i.project(R,v),z=i.project(D,z),N+=t.Cartesian3.distance(v,z),p+=2;const H=s.length/3;z=t.Cartesian3.unpack(s,0,z);let B,V=0;for(p=3,d=1;d<H;d++)v=t.Cartesian3.clone(z,v),z=t.Cartesian3.unpack(s,p,z),V+=t.Cartesian3.distance(v,z),p+=3;p=3;let j=0,G=0,Y=0,F=0,q=!1,X=t.Cartesian3.unpack(r,0,Le),U=t.Cartesian3.unpack(s,0,Ae),Z=t.Cartesian3.unpack(o,0,xe);if(a){pe(Z,t.Cartesian3.unpack(r,r.length-6,ke),X,U)&&(Z=t.Cartesian3.negate(Z,Z))}let $=0,J=0,Q=0;for(d=0;d<g;d++){const e=t.Cartesian3.clone(X,ke),a=t.Cartesian3.clone(U,Pe);let c,d,g,f,m=t.Cartesian3.clone(Z,Se);if(q&&(m=t.Cartesian3.negate(m,m)),X=t.Cartesian3.unpack(r,p,Le),U=t.Cartesian3.unpack(s,p,Ae),Z=t.Cartesian3.unpack(o,p,xe),q=pe(Z,e,X,U),R.latitude=u[j],R.longitude=u[j+1],D.latitude=u[j+2],D.longitude=u[j+3],C){const e=_e(R,D);c=i.project(R,He),d=i.project(D,Be);const a=W(d,c,$e);a.y=Math.abs(a.y),g=Ve,f=je,0===e||t.Cartesian3.dot(a,t.Cartesian3.UNIT_Y)>x?(g=me(i,R,m,c,Ve),f=me(i,D,Z,d,je)):1===e?(f=me(i,D,Z,d,je),g.x=0,g.y=n.CesiumMath.sign(R.longitude-Math.abs(D.longitude)),g.z=0):(g=me(i,R,m,c,Ve),f.x=0,f.y=n.CesiumMath.sign(R.longitude-D.longitude),f.z=0)}const w=t.Cartesian3.distance(a,U),y=l.EncodedCartesian3.fromCartesian(e,Ue),I=t.Cartesian3.subtract(X,e,Ge),v=t.Cartesian3.normalize(I,qe);let z=t.Cartesian3.subtract(a,e,Ye);z=t.Cartesian3.normalize(z,z);let H=t.Cartesian3.cross(v,z,qe);H=t.Cartesian3.normalize(H,H);let K=t.Cartesian3.cross(z,m,Xe);K=t.Cartesian3.normalize(K,K);let ee=t.Cartesian3.subtract(U,X,Fe);ee=t.Cartesian3.normalize(ee,ee);let te=t.Cartesian3.cross(Z,ee,We);te=t.Cartesian3.normalize(te,te);const ae=w/V,ne=$/V;let ie,re,se,oe=0,le=0,ce=0;if(C){oe=t.Cartesian3.distance(c,d),ie=l.EncodedCartesian3.fromCartesian(c,Ze),re=t.Cartesian3.subtract(d,c,$e),se=t.Cartesian3.normalize(re,Je);const e=se.x;se.x=se.y,se.y=-e,le=oe/N,ce=J/N}for(B=0;B<8;B++){const e=F+4*B,a=G+2*B,n=e+3,i=B<4?1:-1,r=2===B||3===B||6===B||7===B?1:-1;t.Cartesian3.pack(y.high,T,e),T[n]=I.x,t.Cartesian3.pack(y.low,E,e),E[n]=I.y,t.Cartesian3.pack(K,_,e),_[n]=I.z,t.Cartesian3.pack(te,O,e),O[n]=ae*i,t.Cartesian3.pack(H,b,e);let s=ne*r;0===s&&r<0&&(s=9),b[n]=s,C&&(P[e]=ie.high.x,P[e+1]=ie.high.y,P[e+2]=ie.low.x,P[e+3]=ie.low.y,L[e]=-g.y,L[e+1]=g.x,L[e+2]=f.y,L[e+3]=-f.x,A[e]=re.x,A[e+1]=re.y,A[e+2]=se.x,A[e+3]=se.y,S[a]=le*i,s=ce*r,0===s&&r<0&&(s=9),S[a+1]=s)}const ue=ve,Ce=ze,de=Re,he=De,ge=t.Rectangle.fromCartographicArray(Ie,Ne),fe=k.getMinimumMaximumHeights(ge,h),we=fe.minimumTerrainHeight,ye=fe.maximumTerrainHeight;Q+=we,Q+=ye,Me(e,a,we,ye,ue,de),Me(X,U,we,ye,Ce,he);let Te=t.Cartesian3.multiplyByScalar(H,n.CesiumMath.EPSILON5,Qe);t.Cartesian3.add(ue,Te,ue),t.Cartesian3.add(Ce,Te,Ce),t.Cartesian3.add(de,Te,de),t.Cartesian3.add(he,Te,he),Ee(ue,Ce),Ee(de,he),t.Cartesian3.pack(ue,M,Y),t.Cartesian3.pack(Ce,M,Y+3),t.Cartesian3.pack(he,M,Y+6),t.Cartesian3.pack(de,M,Y+9),Te=t.Cartesian3.multiplyByScalar(H,-2*n.CesiumMath.EPSILON5,Qe),t.Cartesian3.add(ue,Te,ue),t.Cartesian3.add(Ce,Te,Ce),t.Cartesian3.add(de,Te,de),t.Cartesian3.add(he,Te,he),Ee(ue,Ce),Ee(de,he),t.Cartesian3.pack(ue,M,Y+12),t.Cartesian3.pack(Ce,M,Y+15),t.Cartesian3.pack(he,M,Y+18),t.Cartesian3.pack(de,M,Y+21),j+=2,p+=3,G+=16,Y+=24,F+=32,$+=w,J+=oe}p=0;let K=0;for(d=0;d<g;d++){for(B=0;B<tt;B++)y[p+B]=et[B]+K;K+=8,p+=tt}const ee=Ke;e.BoundingSphere.fromVertices(r,t.Cartesian3.ZERO,3,ee[0]),e.BoundingSphere.fromVertices(s,t.Cartesian3.ZERO,3,ee[1]);const te=e.BoundingSphere.fromBoundingSpheres(ee);te.radius+=Q/(2*g);const ae={position:new c.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,normalize:!1,values:M}),startHiAndForwardOffsetX:at(T),startLoAndForwardOffsetY:at(E),startNormalAndForwardOffsetZ:at(_),endNormalAndTextureCoordinateNormalizationX:at(O),rightNormalAndTextureCoordinateNormalizationY:at(b)};C&&(ae.startHiLo2D=at(P),ae.offsetAndRight2D=at(A),ae.startEndNormals2D=at(L),ae.texcoordNormalization2D=new c.GeometryAttribute({componentDatatype:n.ComponentDatatype.FLOAT,componentsPerAttribute:2,normalize:!1,values:S}));return new c.Geometry({attributes:ae,indices:y,boundingSphere:te})}(d,f,G,Y,j,V,C)};const ue=new t.Cartesian3,Ce=new t.Matrix3,de=new e.Quaternion;function pe(a,i,r,s){const o=W(r,i,ue),l=t.Cartesian3.dot(o,a);if(l>x||l<I){const i=W(s,r,Q),o=l<I?n.CesiumMath.PI_OVER_TWO:-n.CesiumMath.PI_OVER_TWO,c=e.Quaternion.fromAxisAngle(i,o,de),u=t.Matrix3.fromQuaternion(c,Ce);return t.Matrix3.multiplyByVector(u,a,a),!0}return!1}const he=new t.Cartographic,ge=new t.Cartesian3,fe=new t.Cartesian3;function me(e,a,i,r,s){const o=t.Cartographic.toCartesian(a,e._ellipsoid,ge);let l=t.Cartesian3.add(o,i,fe),c=!1;const u=e._ellipsoid;let C=u.cartesianToCartographic(l,he);Math.abs(a.longitude-C.longitude)>n.CesiumMath.PI_OVER_TWO&&(c=!0,l=t.Cartesian3.subtract(o,i,fe),C=u.cartesianToCartographic(l,he)),C.height=0;const d=e.project(C,s);return(s=t.Cartesian3.subtract(d,r,s)).z=0,s=t.Cartesian3.normalize(s,s),c&&t.Cartesian3.negate(s,s),s}const we=new t.Cartesian3,ye=new t.Cartesian3;function Me(e,a,n,i,r,s){const o=t.Cartesian3.subtract(a,e,we);t.Cartesian3.normalize(o,o);const l=n-N;let c=t.Cartesian3.multiplyByScalar(o,l,ye);t.Cartesian3.add(e,c,r);const u=i-R;c=t.Cartesian3.multiplyByScalar(o,u,ye),t.Cartesian3.add(a,c,s)}const Te=new t.Cartesian3;function Ee(e,a){const i=C.Plane.getPointDistance(ee,e),r=C.Plane.getPointDistance(ee,a);let s=Te;n.CesiumMath.equalsEpsilon(i,0,n.CesiumMath.EPSILON2)?(s=W(a,e,s),t.Cartesian3.multiplyByScalar(s,n.CesiumMath.EPSILON2,s),t.Cartesian3.add(e,s,e)):n.CesiumMath.equalsEpsilon(r,0,n.CesiumMath.EPSILON2)&&(s=W(e,a,s),t.Cartesian3.multiplyByScalar(s,n.CesiumMath.EPSILON2,s),t.Cartesian3.add(a,s,a))}function _e(e,t){const a=Math.abs(e.longitude),i=Math.abs(t.longitude);if(n.CesiumMath.equalsEpsilon(a,n.CesiumMath.PI,n.CesiumMath.EPSILON11)){const i=n.CesiumMath.sign(t.longitude);return e.longitude=i*(a-n.CesiumMath.EPSILON11),1}if(n.CesiumMath.equalsEpsilon(i,n.CesiumMath.PI,n.CesiumMath.EPSILON11)){const a=n.CesiumMath.sign(e.longitude);return t.longitude=a*(i-n.CesiumMath.EPSILON11),2}return 0}const Oe=new t.Cartographic,be=new t.Cartographic,Pe=new t.Cartesian3,Ae=new t.Cartesian3,ke=new t.Cartesian3,Le=new t.Cartesian3,Se=new t.Cartesian3,xe=new t.Cartesian3,Ie=[Oe,be],Ne=new t.Rectangle,Re=new t.Cartesian3,De=new t.Cartesian3,ve=new t.Cartesian3,ze=new t.Cartesian3,He=new t.Cartesian3,Be=new t.Cartesian3,Ve=new t.Cartesian3,je=new t.Cartesian3,Ge=new t.Cartesian3,Ye=new t.Cartesian3,Fe=new t.Cartesian3,qe=new t.Cartesian3,Xe=new t.Cartesian3,We=new t.Cartesian3,Ue=new l.EncodedCartesian3,Ze=new l.EncodedCartesian3,$e=new t.Cartesian3,Je=new t.Cartesian3,Qe=new t.Cartesian3,Ke=[new e.BoundingSphere,new e.BoundingSphere],et=[0,2,1,0,3,2,0,7,3,0,4,7,0,5,4,0,1,5,5,7,4,5,6,7,5,2,6,5,1,2,3,6,2,3,7,6],tt=et.length;function at(e){return new c.GeometryAttribute({componentDatatype:n.ComponentDatatype.FLOAT,componentsPerAttribute:4,normalize:!1,values:e})}return D._projectNormal=me,function(e,t){return k.initialize().then((function(){return a.defined(t)&&(e=D.unpack(e,t)),D.createGeometry(e)}))}}));
