/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/nmap-alg-eval/algInfo/create": {
    /** 创建算法 */
    post: operations["createAlgInfoUsingPOST"];
  };
  "/nmap-alg-eval/algInfo/queryList": {
    /** 查询算法列表 */
    post: operations["queryAlgInfoListUsingPOST"];
  };
  "/nmap-alg-eval/algVsn/create": {
    /** 创建算法版本 */
    post: operations["createAlgInfoUsingPOST_1"];
  };
  "/nmap-alg-eval/algVsn/delete": {
    /** 废弃算法版本 */
    post: operations["deleteAlgVsnUsingPOST"];
  };
  "/nmap-alg-eval/algVsn/getAlgVsnWorkflowConf4Create": {
    /** 创建算法版本时，获取算法版本stepList */
    post: operations["getAlgVsnWorkflowConf4CreateUsingPOST"];
  };
  "/nmap-alg-eval/algVsn/queryList": {
    /** 查询算法版本列表 */
    post: operations["queryAlgVsnListUsingPOST"];
  };
  "/nmap-alg-eval/error": {
    /** errorHtml */
    get: operations["errorHtmlUsingGET"];
    /** errorHtml */
    put: operations["errorHtmlUsingPUT"];
    /** errorHtml */
    post: operations["errorHtmlUsingPOST"];
    /** errorHtml */
    delete: operations["errorHtmlUsingDELETE"];
    /** errorHtml */
    options: operations["errorHtmlUsingOPTIONS"];
    /** errorHtml */
    head: operations["errorHtmlUsingHEAD"];
    /** errorHtml */
    patch: operations["errorHtmlUsingPATCH"];
    /** errorHtml */
    trace: operations["errorHtmlUsingTRACE"];
  };
  "/nmap-alg-eval/metricSum/query": {
    /** 查询评测汇总指标 */
    post: operations["querySampleUsingPOST"];
  };
  "/nmap-alg-eval/evalTask/create": {
    /** 创建评测任务 */
    post: operations["createEvalTaskUsingPOST"];
  };
  "/nmap-alg-eval/evalTask/queryEvalAlgSubtaskList": {
    /** 查询评测任务明细列表 */
    post: operations["queryEvalAlgSubtaskListUsingPOST"];
  };
  "/nmap-alg-eval/evalTask/queryList": {
    /** 查询评测任务列表 */
    post: operations["queryEvalTaskListUsingPOST"];
  };
  "/nmap-alg-eval/evalTask/reExecuteEvalMetricSubtask": {
    /** 重跑评测 */
    post: operations["reExecuteEvalMetricSubtaskUsingPOST"];
  };
  "/nmap-alg-eval/actuator/beans": {
    /** handle */
    get: operations["handleUsingGET"];
  };
  "/nmap-alg-eval/actuator/caches": {
    /** handle */
    get: operations["handleUsingGET_1"];
    /** handle */
    delete: operations["handleUsingDELETE"];
  };
  "/nmap-alg-eval/actuator/caches/{cache}": {
    /** handle */
    get: operations["handleUsingGET_2"];
    /** handle */
    delete: operations["handleUsingDELETE_1"];
  };
  "/nmap-alg-eval/actuator/conditions": {
    /** handle */
    get: operations["handleUsingGET_3"];
  };
  "/nmap-alg-eval/actuator/configprops": {
    /** handle */
    get: operations["handleUsingGET_4"];
  };
  "/nmap-alg-eval/actuator/configprops/{prefix}": {
    /** handle */
    get: operations["handleUsingGET_5"];
  };
  "/nmap-alg-eval/actuator/env": {
    /** handle */
    get: operations["handleUsingGET_6"];
  };
  "/nmap-alg-eval/actuator/env/{toMatch}": {
    /** handle */
    get: operations["handleUsingGET_7"];
  };
  "/nmap-alg-eval/actuator/features": {
    /** handle */
    get: operations["handleUsingGET_8"];
  };
  "/nmap-alg-eval/actuator/health": {
    /** handle */
    get: operations["handleUsingGET_9"];
  };
  "/nmap-alg-eval/actuator/health/**": {
    /** handle */
    get: operations["handleUsingGET_10"];
  };
  "/nmap-alg-eval/actuator/heapdump": {
    /** handle */
    get: operations["handleUsingGET_11"];
  };
  "/nmap-alg-eval/actuator/info": {
    /** handle */
    get: operations["handleUsingGET_12"];
  };
  "/nmap-alg-eval/actuator/loggers": {
    /** handle */
    get: operations["handleUsingGET_13"];
  };
  "/nmap-alg-eval/actuator/loggers/{name}": {
    /** handle */
    get: operations["handleUsingGET_14"];
    /** handle */
    post: operations["handleUsingPOST"];
  };
  "/nmap-alg-eval/actuator/mappings": {
    /** handle */
    get: operations["handleUsingGET_15"];
  };
  "/nmap-alg-eval/actuator/metrics": {
    /** handle */
    get: operations["handleUsingGET_16"];
  };
  "/nmap-alg-eval/actuator/metrics/{requiredMetricName}": {
    /** handle */
    get: operations["handleUsingGET_17"];
  };
  "/nmap-alg-eval/actuator/prometheus": {
    /** handle */
    get: operations["handleUsingGET_18"];
  };
  "/nmap-alg-eval/actuator/refresh": {
    /** handle */
    post: operations["handleUsingPOST_1"];
  };
  "/nmap-alg-eval/actuator/scheduledtasks": {
    /** handle */
    get: operations["handleUsingGET_19"];
  };
  "/nmap-alg-eval/actuator/threaddump": {
    /** handle */
    get: operations["handleUsingGET_20"];
  };
  "/nmap-alg-eval/sample/query": {
    /** 查询样本列表 */
    post: operations["querySampleUsingPOST_1"];
  };
  "/nmap-alg-eval/sampleSet/query": {
    /** 查询评测集列表 */
    post: operations["querySampleSetUsingPOST"];
  };
  "/nmap-alg-eval/sampleSet/upsert": {
    /** 创建评测集 */
    post: operations["upsertSampleSetUsingPOST"];
  };
  "/nmap-alg-eval/sampleSet/{setId}": {
    /** 获取评测集完整信息 */
    get: operations["getSampleSetByIdUsingGET"];
  };
  "/nmap-alg-eval/util/getBizAndAlgType": {
    /** 获取产线和算法类型列表 */
    get: operations["getCityListUsingGET"];
  };
  "/nmap-alg-eval/actuator": {
    /** links */
    get: operations["linksUsingGET"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AlgInfo */
    AlgInfo: {
      /** @description 算法描述 */
      algDesc?: string;
      /**
       * Format: int32
       * @description 算法编号
       */
      algId?: number;
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      bizType?: number;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 评测workflow */
      evalWorkflow?: string;
      /** @description 创建人 */
      operator?: string;
      /** @description 生产workflow */
      prodWorkflow?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** AlgInfoQuery */
    AlgInfoQuery: {
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      bizType?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
    };
    /** AlgInfoVo */
    AlgInfoVo: {
      /** @description 算法描述 */
      algDesc?: string;
      /**
       * Format: int32
       * @description 算法编号
       */
      algId?: number;
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 算法类型描述 */
      algTypeDesc?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      bizType?: number;
      /** @description 产线类型描述 */
      bizTypeDesc?: string;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 评测workflow */
      evalWorkflow?: string;
      /** @description 创建人 */
      operator?: string;
      /** @description 生产workflow */
      prodWorkflow?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** AlgVsn */
    AlgVsn: {
      /**
       * Format: int32
       * @description 算法编号
       */
      algId?: number;
      /** @description 算法版本号 */
      algVsn?: string;
      /** @description 算法版本描述 */
      algVsnDesc?: string;
      /** Format: int32 */
      algVsnId?: number;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /**
       * Format: date-time
       * @description 上线时间
       */
      launchTime?: string;
      /** @description 创建人 */
      operator?: string;
      /** @description 生产workflow配置字符串 */
      stepConf?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** AlgVsnQuery */
    AlgVsnQuery: {
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 算法版本号 */
      algVsn?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      bizType?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
    };
    /** AlgVsnVo */
    AlgVsnVo: {
      /**
       * Format: int32
       * @description 算法编号
       */
      algId?: number;
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 算法类型描述 */
      algTypeDesc?: string;
      /** @description 算法版本号 */
      algVsn?: string;
      /** @description 算法版本描述 */
      algVsnDesc?: string;
      /** Format: int32 */
      algVsnId?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      bizType?: number;
      /** @description 产线类型描述 */
      bizTypeDesc?: string;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /**
       * Format: date-time
       * @description 上线时间
       */
      launchTime?: string;
      /** @description 创建人 */
      operator?: string;
      /** @description 生产workflow配置字符串 */
      stepConf?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** AlgVsnWorkflowConf */
    AlgVsnWorkflowConf: {
      /** @description workflowName */
      name?: string;
      /** @description step配置List */
      stepConfList?: components["schemas"]["WorkflowStepConf"][];
    };
    /** CreateSampleSetRequest */
    CreateSampleSetRequest: {
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 样本列表 */
      sampleList?: string;
      /** @description 评测集描述 */
      setDesc?: string;
      /**
       * Format: int32
       * @description 评测集编号,更新时设置
       */
      setId?: number;
      /** @description 评测集名称 */
      setName?: string;
    };
    /** EvalMetricSumQuery */
    EvalMetricSumQuery: {
      /** @description 维度1名称 */
      dimName1?: string;
      /** @description 维度2名称 */
      dimName2?: string;
      /** @description 维度3名称 */
      dimName3?: string;
      /** @description 指标名列表 */
      metricNameList?: string[];
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** @description 任务编号列表,需要属于同一个评测集的执行任务 */
      taskIdList?: number[];
    };
    /** EvalSubTaskQuery */
    EvalSubTaskQuery: {
      /**
       * Format: int32
       * @description AIP任务ID
       */
      aipTaskId?: number;
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 算法版本号 */
      algVsn?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** Format: date-time */
      endEndTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** Format: int32 */
      retryTimesLimit?: number;
      /**
       * Format: int32
       * @description 样本编号
       */
      sampleId?: number;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** Format: date-time */
      startEndTime?: string;
      /** @description 执行状态 */
      status?: string;
      subtaskType?: string;
      /**
       * Format: int32
       * @description 任务编号
       */
      taskId?: number;
    };
    /** EvalSubtaskVo */
    EvalSubtaskVo: {
      /** @description AIP任务ID */
      aipTaskId?: string;
      /** @description AIP任务跳转链接 */
      aipTaskUrl?: string;
      /** @description 算法名称 */
      algName?: string;
      /** Format: int32 */
      algType?: number;
      /** @description 算法类型名称 */
      algTypeName?: string;
      /** @description 算法版本号 */
      algVsn?: string;
      /** Format: int32 */
      algVsnId?: number;
      /** Format: date-time */
      createTime?: string;
      /** @description 实体编号 */
      crossId?: string;
      /** @description 数据集clip */
      datasetClip?: string;
      /** @description 数据集名 */
      datasetName?: string;
      /** Format: date-time */
      endTime?: string;
      evalAlgVsn?: string;
      /** @description 指标文件存储地址 */
      metricFile?: string;
      /** Format: int32 */
      retryTimes?: number;
      /**
       * Format: int32
       * @description 样本编号
       */
      sampleId?: number;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** Format: date-time */
      startTime?: string;
      /** @description 执行状态 */
      status?: string;
      /**
       * Format: int64
       * @description 子任务编号
       */
      subtaskId?: number;
      /** @description 子任务类型 */
      subtaskType?: string;
      /**
       * Format: int32
       * @description 任务编号
       */
      taskId?: number;
    };
    /** EvalTask */
    EvalTask: {
      /** Format: int32 */
      algVsnId?: number;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      createTime?: string;
      /**
       * Format: date-time
       * @description 任务结束时间
       */
      endTime?: string;
      /** @description 操作人 */
      operator?: string;
      /**
       * Format: int32
       * @description 评测样本数
       */
      sampleNum?: number;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** @description 执行状态 */
      status?: string;
      taskDesc?: string;
      /**
       * Format: int32
       * @description 任务编号
       */
      taskId?: number;
      /** @description 任务名称 */
      taskName?: string;
    };
    /** EvalTaskCreateReq */
    EvalTaskCreateReq: {
      /**
       * Format: int32
       * @description 算法版本编号
       */
      algVsnId?: number;
      operator?: string;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** @description 任务描述 */
      taskDesc?: string;
      /** @description 任务名称 */
      taskName?: string;
    };
    /** EvalTaskQuery */
    EvalTaskQuery: {
      /** @description 算法名称 */
      algName?: string;
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 算法版本号 */
      algVsn?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** @description 执行状态 */
      status?: string;
      /**
       * Format: int64
       * @description 任务编号
       */
      taskId?: number;
    };
    /** EvalTaskVo */
    EvalTaskVo: {
      /** @description 算法名称 */
      algName?: string;
      /** Format: int32 */
      algType?: number;
      /** @description 算法类型名称 */
      algTypeDesc?: string;
      /** @description 算法版本号 */
      algVsn?: string;
      /** Format: int32 */
      algVsnId?: number;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      createTime?: string;
      /**
       * Format: date-time
       * @description 任务结束时间
       */
      endTime?: string;
      /** @description 操作人 */
      operator?: string;
      /**
       * Format: int32
       * @description 评测样本数
       */
      sampleNum?: number;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** @description 执行状态 */
      status?: string;
      taskDesc?: string;
      /**
       * Format: int32
       * @description 任务编号
       */
      taskId?: number;
      /** @description 任务名称 */
      taskName?: string;
    };
    /** Link */
    Link: {
      href?: string;
      templated?: boolean;
    };
    /** MetricSumTable */
    MetricSumTable: {
      dimStrlist?: string[];
      metricNameList?: string[];
      tableData?: string[][];
      tableName?: string;
      /** Format: int32 */
      taskId?: number;
    };
    /** ModelAndView */
    ModelAndView: {
      empty?: boolean;
      model?: Record<string, never>;
      modelMap?: {
        [key: string]: Record<string, never>;
      };
      reference?: boolean;
      /** @enum {string} */
      status?: "ACCEPTED" | "ALREADY_REPORTED" | "BAD_GATEWAY" | "BAD_REQUEST" | "BANDWIDTH_LIMIT_EXCEEDED" | "CHECKPOINT" | "CONFLICT" | "CONTINUE" | "CREATED" | "DESTINATION_LOCKED" | "EXPECTATION_FAILED" | "FAILED_DEPENDENCY" | "FORBIDDEN" | "FOUND" | "GATEWAY_TIMEOUT" | "GONE" | "HTTP_VERSION_NOT_SUPPORTED" | "IM_USED" | "INSUFFICIENT_SPACE_ON_RESOURCE" | "INSUFFICIENT_STORAGE" | "INTERNAL_SERVER_ERROR" | "I_AM_A_TEAPOT" | "LENGTH_REQUIRED" | "LOCKED" | "LOOP_DETECTED" | "METHOD_FAILURE" | "METHOD_NOT_ALLOWED" | "MOVED_PERMANENTLY" | "MOVED_TEMPORARILY" | "MULTIPLE_CHOICES" | "MULTI_STATUS" | "NETWORK_AUTHENTICATION_REQUIRED" | "NON_AUTHORITATIVE_INFORMATION" | "NOT_ACCEPTABLE" | "NOT_EXTENDED" | "NOT_FOUND" | "NOT_IMPLEMENTED" | "NOT_MODIFIED" | "NO_CONTENT" | "OK" | "PARTIAL_CONTENT" | "PAYLOAD_TOO_LARGE" | "PAYMENT_REQUIRED" | "PERMANENT_REDIRECT" | "PRECONDITION_FAILED" | "PRECONDITION_REQUIRED" | "PROCESSING" | "PROXY_AUTHENTICATION_REQUIRED" | "REQUESTED_RANGE_NOT_SATISFIABLE" | "REQUEST_ENTITY_TOO_LARGE" | "REQUEST_HEADER_FIELDS_TOO_LARGE" | "REQUEST_TIMEOUT" | "REQUEST_URI_TOO_LONG" | "RESET_CONTENT" | "SEE_OTHER" | "SERVICE_UNAVAILABLE" | "SWITCHING_PROTOCOLS" | "TEMPORARY_REDIRECT" | "TOO_EARLY" | "TOO_MANY_REQUESTS" | "UNAUTHORIZED" | "UNAVAILABLE_FOR_LEGAL_REASONS" | "UNPROCESSABLE_ENTITY" | "UNSUPPORTED_MEDIA_TYPE" | "UPGRADE_REQUIRED" | "URI_TOO_LONG" | "USE_PROXY" | "VARIANT_ALSO_NEGOTIATES";
      view?: components["schemas"]["View"];
      viewName?: string;
    };
    /** PageVo«AlgInfoVo» */
    "PageVo«AlgInfoVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["AlgInfoVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«AlgVsnVo» */
    "PageVo«AlgVsnVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["AlgVsnVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«EvalSubtaskVo» */
    "PageVo«EvalSubtaskVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["EvalSubtaskVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«EvalTaskVo» */
    "PageVo«EvalTaskVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["EvalTaskVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«SampleInfo» */
    "PageVo«SampleInfo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["SampleInfo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«SampleSetVo» */
    "PageVo«SampleSetVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["SampleSetVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** ResponseVo */
    ResponseVo: {
      /** Format: int32 */
      code?: number;
      data?: Record<string, never>;
      msg?: string;
    };
    /** ResponseVo«AlgInfo» */
    "ResponseVo«AlgInfo»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["AlgInfo"];
      msg?: string;
    };
    /** ResponseVo«AlgVsnWorkflowConf» */
    "ResponseVo«AlgVsnWorkflowConf»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["AlgVsnWorkflowConf"];
      msg?: string;
    };
    /** ResponseVo«AlgVsn» */
    "ResponseVo«AlgVsn»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["AlgVsn"];
      msg?: string;
    };
    /** ResponseVo«EvalTask» */
    "ResponseVo«EvalTask»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["EvalTask"];
      msg?: string;
    };
    /** ResponseVo«List«MetricSumTable»» */
    "ResponseVo«List«MetricSumTable»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["MetricSumTable"][];
      msg?: string;
    };
    /** ResponseVo«SampleSetVo» */
    "ResponseVo«SampleSetVo»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["SampleSetVo"];
      msg?: string;
    };
    /** ResponseVo«SampleSet» */
    "ResponseVo«SampleSet»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["SampleSet"];
      msg?: string;
    };
    /** ResponseVo«object» */
    "ResponseVo«object»": {
      /** Format: int32 */
      code?: number;
      data?: Record<string, never>;
      msg?: string;
    };
    /** SampleInfo */
    SampleInfo: {
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 样本关联的场景(路口/匝道/PN/PSP)编号 */
      crossId?: string;
      /**
       * Format: int64
       * @description 样本关联的生产平台中的建图任务编号
       */
      mappingTaskId?: number;
      /** @description 样本描述 */
      sampleDesc?: string;
      /**
       * Format: int32
       * @description 样本编号
       */
      sampleId?: number;
      /** @description 存储信息 */
      storeInfo?: string;
      /** Format: byte */
      tag?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** SampleInfoQuery */
    SampleInfoQuery: {
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 实体编号 */
      crossId?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
    };
    /** SampleSet */
    SampleSet: {
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /**
       * Format: int32
       * @description 样本数量
       */
      sampleNum?: number;
      /** @description 评测集描述 */
      setDesc?: string;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** @description 评测集名称 */
      setName?: string;
      /** Format: byte */
      tag?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** SampleSetQuery */
    SampleSetQuery: {
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** @description 评测集名称 */
      setName?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
    };
    /** SampleSetVo */
    SampleSetVo: {
      /**
       * Format: int32
       * @description 算法类型
       */
      algType?: number;
      /** @description 算法类型描述 */
      algTypeDesc?: string;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 样本列表 */
      sampleList?: string;
      /**
       * Format: int32
       * @description 样本数量
       */
      sampleNum?: number;
      /** @description 评测集描述 */
      setDesc?: string;
      /**
       * Format: int32
       * @description 评测集编号
       */
      setId?: number;
      /** @description 评测集名称 */
      setName?: string;
      /** Format: byte */
      tag?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** View */
    View: {
      contentType?: string;
    };
    /** WorkflowStepConf */
    WorkflowStepConf: {
      /** @description step镜像地址 */
      image?: string;
      /**
       * Format: int32
       * @description stepId
       */
      stepId?: number;
      /** @description step名称 */
      stepName?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** 创建算法 */
  createAlgInfoUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["AlgInfo"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«AlgInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询算法列表 */
  queryAlgInfoListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["AlgInfoQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«AlgInfoVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建算法版本 */
  createAlgInfoUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["AlgVsn"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«AlgVsn»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 废弃算法版本 */
  deleteAlgVsnUsingPOST: {
    parameters: {
      query: {
        /** @description algVsnId */
        algVsnId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建算法版本时，获取算法版本stepList */
  getAlgVsnWorkflowConf4CreateUsingPOST: {
    parameters: {
      query: {
        /** @description algId */
        algId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«AlgVsnWorkflowConf»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询算法版本列表 */
  queryAlgVsnListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["AlgVsnQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«AlgVsnVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingPUT: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingDELETE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingOPTIONS: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingHEAD: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingPATCH: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** errorHtml */
  errorHtmlUsingTRACE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/html": components["schemas"]["ModelAndView"];
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** 查询评测汇总指标 */
  querySampleUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["EvalMetricSumQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«MetricSumTable»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建评测任务 */
  createEvalTaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["EvalTaskCreateReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«EvalTask»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询评测任务明细列表 */
  queryEvalAlgSubtaskListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["EvalSubTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«EvalSubtaskVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询评测任务列表 */
  queryEvalTaskListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["EvalTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«EvalTaskVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 重跑评测 */
  reExecuteEvalMetricSubtaskUsingPOST: {
    parameters: {
      query: {
        /** @description taskId */
        taskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingDELETE: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_2: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingDELETE_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_3: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_4: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_5: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_6: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_7: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_8: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_9: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_10: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_11: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/octet-stream": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_12: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_13: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_14: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingPOST: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
        "application/vnd.spring-boot.actuator.v2+json": {
          [key: string]: string;
        };
        "application/vnd.spring-boot.actuator.v3+json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_15: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_16: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_17: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_18: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain;version=0.0.4;charset=utf-8": Record<string, never>;
          "application/openmetrics-text;version=1.0.0;charset=utf-8": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_19: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_20: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain;charset=UTF-8": Record<string, never>;
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询样本列表 */
  querySampleUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SampleInfoQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«SampleInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询评测集列表 */
  querySampleSetUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SampleSetQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«SampleSetVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建评测集 */
  upsertSampleSetUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateSampleSetRequest"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«SampleSet»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取评测集完整信息 */
  getSampleSetByIdUsingGET: {
    parameters: {
      path: {
        /** @description setId */
        setId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«SampleSetVo»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取产线和算法类型列表 */
  getCityListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«object»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** links */
  linksUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            [key: string]: Record<string, never>;
          };
          "application/vnd.spring-boot.actuator.v3+json": {
            [key: string]: Record<string, never>;
          };
          "application/vnd.spring-boot.actuator.v2+json": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
}
