/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/produce-demand-management/error": {
    /** error */
    get: operations["errorUsingGET"];
    /** error */
    put: operations["errorUsingPUT"];
    /** error */
    post: operations["errorUsingPOST"];
    /** error */
    delete: operations["errorUsingDELETE"];
    /** error */
    options: operations["errorUsingOPTIONS"];
    /** error */
    head: operations["errorUsingHEAD"];
    /** error */
    patch: operations["errorUsingPATCH"];
    /** error */
    trace: operations["errorUsingTRACE"];
  };
  "/produce-demand-management/common/bizType": {
    /** 返回业务类型的枚举值 */
    get: operations["getBizTypeUsingGET"];
  };
  "/produce-demand-management/common/checkLocationPoint": {
    /** checkLocationPoint */
    get: operations["checkLocationPointUsingGET"];
  };
  "/produce-demand-management/common/demandDetailStatus": {
    /** 需求明细的执行状态枚举值 */
    get: operations["getDemandDetailStatusUsingGET"];
  };
  "/produce-demand-management/common/demandStatus": {
    /** 需求执行状态枚举值 */
    get: operations["getDemandStatusUsingGET"];
  };
  "/produce-demand-management/common/demandType/{bizType}": {
    /** 返回需求类型的枚举值 */
    get: operations["getDemandTypeUsingGET"];
  };
  "/produce-demand-management/common/routeDirection": {
    /** 路径方向枚举值 */
    get: operations["routeDirectionUsingGET"];
  };
  "/produce-demand-management/common/routeStatus": {
    /** 路径状态枚举值 */
    get: operations["getRouteStatusUsingGET"];
  };
  "/produce-demand-management/common/siteKind": {
    /** 场景种别枚举值 */
    get: operations["getSiteKindUsingGET"];
  };
  "/produce-demand-management/common/siteKind/{bizType}": {
    /** 场景种别枚举值 */
    get: operations["getSiteKindUsingGET_1"];
  };
  "/produce-demand-management/common/siteOptStatus": {
    /** 场景变更操作状态枚举值 */
    get: operations["getSiteOptStatusUsingGET"];
  };
  "/produce-demand-management/common/siteOptType/{bizType}": {
    /** 业务类型下的场景操作类型枚举值 */
    get: operations["getSiteOptTypeUsingGET"];
  };
  "/produce-demand-management/common/siteStatus": {
    /** 场景生产状态枚举值 */
    get: operations["getSiteStatusUsingGET"];
  };
  "/produce-demand-management/common/siteType/{bizType}": {
    /** 场景类型枚举值(区分不同业务类型) */
    get: operations["getSiteTypeUsingGET"];
  };
  "/produce-demand-management/demand/addSites": {
    /** 为生产需求添加场景 */
    post: operations["addSitesUsingPOST"];
  };
  "/produce-demand-management/demand/applySyncLog": {
    /** 执行PNPSP场景同步 */
    get: operations["applySyncLogUsingGET"];
    /** 执行PNPSP场景同步 */
    post: operations["applySyncLogUsingPOST"];
  };
  "/produce-demand-management/demand/downloadDetail": {
    /** 下载需求明细 */
    post: operations["downloadDetailUsingPOST"];
  };
  "/produce-demand-management/demand/importMapDemand": {
    /** 拓路制图业务为需求导入或下发场景 */
    post: operations["importMapDemandUsingPOST"];
  };
  "/produce-demand-management/demand/query": {
    /** 查询需求列表 */
    post: operations["queryUsingPOST"];
  };
  "/produce-demand-management/demand/queryDetail": {
    /** 查询需求明细列表 */
    post: operations["queryDetailUsingPOST"];
  };
  "/produce-demand-management/demand/querySyncTask": {
    /** 查询场景分析任务 */
    post: operations["querySyncTaskUsingPOST"];
  };
  "/produce-demand-management/demand/reworkMapSite": {
    /** 拓路制图更新生产 */
    post: operations["reworkMapSiteUsingPOST"];
  };
  "/produce-demand-management/demand/syncMapSite": {
    /** 创建拓路制图同步场景需求 */
    post: operations["syncMapSiteUsingPOST"];
  };
  "/produce-demand-management/demand/upsert": {
    /** 新增/更新需求,业务类型和需求类型不能修改 */
    post: operations["upsertDemandUsingPOST"];
  };
  "/produce-demand-management/demand/verifyPnPspSite": {
    /** 创建PNPSP资源验证需求 */
    post: operations["verifyPnPspSiteUsingPOST"];
  };
  "/produce-demand-management/actuator/beans": {
    /** handle */
    get: operations["handleUsingGET"];
  };
  "/produce-demand-management/actuator/caches": {
    /** handle */
    get: operations["handleUsingGET_1"];
    /** handle */
    delete: operations["handleUsingDELETE"];
  };
  "/produce-demand-management/actuator/caches/{cache}": {
    /** handle */
    get: operations["handleUsingGET_2"];
    /** handle */
    delete: operations["handleUsingDELETE_1"];
  };
  "/produce-demand-management/actuator/conditions": {
    /** handle */
    get: operations["handleUsingGET_3"];
  };
  "/produce-demand-management/actuator/configprops": {
    /** handle */
    get: operations["handleUsingGET_4"];
  };
  "/produce-demand-management/actuator/configprops/{prefix}": {
    /** handle */
    get: operations["handleUsingGET_5"];
  };
  "/produce-demand-management/actuator/env": {
    /** handle */
    get: operations["handleUsingGET_6"];
  };
  "/produce-demand-management/actuator/env/{toMatch}": {
    /** handle */
    get: operations["handleUsingGET_7"];
  };
  "/produce-demand-management/actuator/features": {
    /** handle */
    get: operations["handleUsingGET_8"];
  };
  "/produce-demand-management/actuator/health": {
    /** handle */
    get: operations["handleUsingGET_9"];
  };
  "/produce-demand-management/actuator/health/**": {
    /** handle */
    get: operations["handleUsingGET_10"];
  };
  "/produce-demand-management/actuator/heapdump": {
    /** handle */
    get: operations["handleUsingGET_11"];
  };
  "/produce-demand-management/actuator/info": {
    /** handle */
    get: operations["handleUsingGET_12"];
  };
  "/produce-demand-management/actuator/loggers": {
    /** handle */
    get: operations["handleUsingGET_13"];
  };
  "/produce-demand-management/actuator/loggers/{name}": {
    /** handle */
    get: operations["handleUsingGET_14"];
    /** handle */
    post: operations["handleUsingPOST"];
  };
  "/produce-demand-management/actuator/mappings": {
    /** handle */
    get: operations["handleUsingGET_15"];
  };
  "/produce-demand-management/actuator/metrics": {
    /** handle */
    get: operations["handleUsingGET_16"];
  };
  "/produce-demand-management/actuator/metrics/{requiredMetricName}": {
    /** handle */
    get: operations["handleUsingGET_17"];
  };
  "/produce-demand-management/actuator/prometheus": {
    /** handle */
    get: operations["handleUsingGET_18"];
  };
  "/produce-demand-management/actuator/refresh": {
    /** handle */
    post: operations["handleUsingPOST_1"];
  };
  "/produce-demand-management/actuator/scheduledtasks": {
    /** handle */
    get: operations["handleUsingGET_19"];
  };
  "/produce-demand-management/actuator/threaddump": {
    /** handle */
    get: operations["handleUsingGET_20"];
  };
  "/produce-demand-management/optlog/byId/{logId}": {
    /** 加载操作日志 */
    get: operations["getSiteOptLogUsingGET"];
  };
  "/produce-demand-management/optlog/check": {
    /** 核实操作日志 */
    post: operations["checkOptLogUsingPOST"];
  };
  "/produce-demand-management/optlog/query": {
    /** 查询操作日志 */
    post: operations["queryUsingPOST_1"];
  };
  "/produce-demand-management/site/byId/{siteId}": {
    /** 加载场景 */
    get: operations["getByIdUsingGET"];
  };
  "/produce-demand-management/site/create": {
    /** 手工创建场景信息 */
    post: operations["createSiteUsingPOST"];
  };
  "/produce-demand-management/site/delete": {
    /** 手工删除场景 */
    post: operations["deleteSiteUsingPOST"];
  };
  "/produce-demand-management/site/downloadList": {
    /** 下载场景列表-前端页面 */
    post: operations["downloadListUsingPOST"];
  };
  "/produce-demand-management/site/downloadRoute": {
    /** 下载路径 */
    post: operations["downloadRouteUsingPOST"];
  };
  "/produce-demand-management/site/nearbylist": {
    /** 查询附近的场景列表 */
    post: operations["nearbyListUsingPOST"];
  };
  "/produce-demand-management/site/query": {
    /** 查询场景 */
    post: operations["queryUsingPOST_2"];
  };
  "/produce-demand-management/site/queryList": {
    /** 查询场景列表-前端页面 */
    post: operations["queryListUsingPOST"];
  };
  "/produce-demand-management/site/queryMapParentSiteList/{siteId}": {
    /** 查询拓路制图子场景所属父场景列表 */
    get: operations["queryMapParentSiteListUsingGET"];
  };
  "/produce-demand-management/site/queryMapSubSiteList/{siteId}": {
    /** 查询拓路制图复合场景的子场景信息列表 */
    get: operations["queryMapSubSiteListUsingGET"];
  };
  "/produce-demand-management/site/queryRoute": {
    /** 查询路径 */
    post: operations["queryRouteUsingPOST"];
  };
  "/produce-demand-management/site/update": {
    /** 手工修改场景信息 */
    post: operations["updateSiteUsingPOST"];
  };
  "/produce-demand-management/actuator": {
    /** links */
    get: operations["linksUsingGET"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** CheckLocationPointVO */
    CheckLocationPointVO: {
      address?: string;
      areaCode?: string;
      mesh?: string;
    };
    /** DemandDetailQuery */
    DemandDetailQuery: {
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /**
       * Format: int32
       * @description 操作日志编号
       */
      id?: number;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** @description 场景编号 */
      siteId?: string;
      /** @description 场景编号列表 */
      siteIdList?: string[];
      /**
       * Format: int32
       * @description 操作执行状态
       */
      status?: number;
    };
    /** DemandDetailVo */
    DemandDetailVo: {
      /**
       * Format: int32
       * @description 业务分类
       */
      bizType?: number;
      createTime?: components["schemas"]["Timestamp"];
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /** @description 需求描述 */
      desc?: string;
      /** Format: int32 */
      id?: number;
      /** @description 需求名称 */
      name?: string;
      /** @description 操作员 */
      operator?: string;
      /** @description 生产参数 */
      param?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 操作执行状态
       */
      status?: number;
      /** @description 目标路径 */
      targetRoutes?: string;
      updateTime?: components["schemas"]["Timestamp"];
    };
    /** DemandInfoQuery */
    DemandInfoQuery: {
      /**
       * Format: int32
       * @description 业务分类
       */
      bizType?: number;
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      endCreateTime?: string;
      /** @description 需求名称 */
      name?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /**
       * Format: int32
       * @description 状态
       */
      status?: number;
    };
    /** DemandInfoReq */
    DemandInfoReq: {
      /**
       * Format: int32
       * @description 业务分类
       */
      bizType?: number;
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /** @description 需求描述 */
      desc?: string;
      /** @description 需求名称 */
      name?: string;
      /** @description 操作员 */
      operator?: string;
      /** @description 扩展信息。PN伴生验证用来存NDS版本号 */
      otherInfo?: string;
      /**
       * Format: int32
       * @description 场景数量
       */
      siteNum?: number;
      /**
       * Format: int32
       * @description 状态
       */
      status?: number;
    };
    /** DemandInfoRes */
    DemandInfoRes: {
      /**
       * Format: int32
       * @description 业务分类
       */
      bizType?: number;
      createTime?: components["schemas"]["Timestamp"];
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /** @description 需求描述 */
      desc?: string;
      /** @description 需求名称 */
      name?: string;
      /** @description 操作员 */
      operator?: string;
      /** @description 扩展信息。PN伴生验证用来存NDS版本号 */
      otherInfo?: string;
      /**
       * Format: int32
       * @description 场景数量
       */
      siteNum?: number;
      /**
       * Format: int32
       * @description 状态
       */
      status?: number;
      updateTime?: components["schemas"]["Timestamp"];
    };
    /** Link */
    Link: {
      href?: string;
      templated?: boolean;
    };
    /** MapDemandImportSiteReq */
    MapDemandImportSiteReq: {
      /** @description 场景库数据版本 */
      dataVsn?: string;
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /** @description 场景列表文件路径 */
      siteIdFilePath?: string;
    };
    /** MapReworkReq */
    MapReworkReq: {
      reworkedSiteList?: components["schemas"]["ReworkedSite"][];
    };
    /** ModelAndView */
    ModelAndView: {
      empty?: boolean;
      model?: Record<string, never>;
      modelMap?: {
        [key: string]: Record<string, never>;
      };
      reference?: boolean;
      /** @enum {string} */
      status?: "ACCEPTED" | "ALREADY_REPORTED" | "BAD_GATEWAY" | "BAD_REQUEST" | "BANDWIDTH_LIMIT_EXCEEDED" | "CHECKPOINT" | "CONFLICT" | "CONTINUE" | "CREATED" | "DESTINATION_LOCKED" | "EXPECTATION_FAILED" | "FAILED_DEPENDENCY" | "FORBIDDEN" | "FOUND" | "GATEWAY_TIMEOUT" | "GONE" | "HTTP_VERSION_NOT_SUPPORTED" | "IM_USED" | "INSUFFICIENT_SPACE_ON_RESOURCE" | "INSUFFICIENT_STORAGE" | "INTERNAL_SERVER_ERROR" | "I_AM_A_TEAPOT" | "LENGTH_REQUIRED" | "LOCKED" | "LOOP_DETECTED" | "METHOD_FAILURE" | "METHOD_NOT_ALLOWED" | "MOVED_PERMANENTLY" | "MOVED_TEMPORARILY" | "MULTIPLE_CHOICES" | "MULTI_STATUS" | "NETWORK_AUTHENTICATION_REQUIRED" | "NON_AUTHORITATIVE_INFORMATION" | "NOT_ACCEPTABLE" | "NOT_EXTENDED" | "NOT_FOUND" | "NOT_IMPLEMENTED" | "NOT_MODIFIED" | "NO_CONTENT" | "OK" | "PARTIAL_CONTENT" | "PAYLOAD_TOO_LARGE" | "PAYMENT_REQUIRED" | "PERMANENT_REDIRECT" | "PRECONDITION_FAILED" | "PRECONDITION_REQUIRED" | "PROCESSING" | "PROXY_AUTHENTICATION_REQUIRED" | "REQUESTED_RANGE_NOT_SATISFIABLE" | "REQUEST_ENTITY_TOO_LARGE" | "REQUEST_HEADER_FIELDS_TOO_LARGE" | "REQUEST_TIMEOUT" | "REQUEST_URI_TOO_LONG" | "RESET_CONTENT" | "SEE_OTHER" | "SERVICE_UNAVAILABLE" | "SWITCHING_PROTOCOLS" | "TEMPORARY_REDIRECT" | "TOO_EARLY" | "TOO_MANY_REQUESTS" | "UNAUTHORIZED" | "UNAVAILABLE_FOR_LEGAL_REASONS" | "UNPROCESSABLE_ENTITY" | "UNSUPPORTED_MEDIA_TYPE" | "UPGRADE_REQUIRED" | "URI_TOO_LONG" | "USE_PROXY" | "VARIANT_ALSO_NEGOTIATES";
      view?: components["schemas"]["View"];
      viewName?: string;
    };
    /** NearbyListReq */
    NearbyListReq: {
      /**
       * Format: int32
       * @description 业务类型
       */
      bizType?: number;
      /**
       * Format: int64
       * @description 半径，单位公里
       */
      distance?: number;
      /** @description 经纬度wkt格式 */
      locationPoint?: string;
    };
    /** PageVo«DemandDetailVo» */
    "PageVo«DemandDetailVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["DemandDetailVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«DemandInfo» */
    "PageVo«DemandInfo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["DemandInfoRes"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«RouteInfo» */
    "PageVo«RouteInfo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["RouteInfo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«SiteInfo» */
    "PageVo«SiteInfo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["SiteInfo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«SiteOptLog» */
    "PageVo«SiteOptLog»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["SiteOptLog"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«SyncDemandInfoVo» */
    "PageVo«SyncDemandInfoVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["SyncDemandInfoVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«场景实体类» */
    "PageVo«场景实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["场景实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** ResponseVo«CheckLocationPointVO» */
    "ResponseVo«CheckLocationPointVO»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["CheckLocationPointVO"];
      msg?: string;
    };
    /** ResponseVo«DemandInfo» */
    "ResponseVo«DemandInfo»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["DemandInfoRes"];
      msg?: string;
    };
    /** ResponseVo«List«SiteInfo»» */
    "ResponseVo«List«SiteInfo»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["SiteInfo"][];
      msg?: string;
    };
    /** ResponseVo«List«string»» */
    "ResponseVo«List«string»»": {
      /** Format: int32 */
      code?: number;
      data?: string[];
      msg?: string;
    };
    /** ResponseVo«List«场景实体类»» */
    "ResponseVo«List«场景实体类»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["场景实体类"][];
      msg?: string;
    };
    /** ResponseVo«Map«string,int»» */
    "ResponseVo«Map«string,int»»": {
      /** Format: int32 */
      code?: number;
      data?: {
        [key: string]: number;
      };
      msg?: string;
    };
    /** ResponseVo«SiteInfo» */
    "ResponseVo«SiteInfo»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["SiteInfo"];
      msg?: string;
    };
    /** ResponseVo«Void» */
    "ResponseVo«Void»": {
      /** Format: int32 */
      code?: number;
      msg?: string;
    };
    /** ResponseVo«int» */
    "ResponseVo«int»": {
      /** Format: int32 */
      code?: number;
      /** Format: int32 */
      data?: number;
      msg?: string;
    };
    /** ResponseVo«object» */
    "ResponseVo«object»": {
      /** Format: int32 */
      code?: number;
      data?: Record<string, never>;
      msg?: string;
    };
    /** ReworkedSite */
    ReworkedSite: {
      routes?: number[];
      siteId?: string;
    };
    /** RouteInfo */
    RouteInfo: {
      /** Format: int32 */
      direction?: number;
      /** Format: int64 */
      id?: number;
      pathPid?: string;
      /** Format: int64 */
      routeId?: number;
      siteId?: string;
      /** Format: int32 */
      status?: number;
      /**
       * Format: int64
       * @description 场景标签
       */
      tag?: number;
    };
    /** RouteInfoQuery */
    RouteInfoQuery: {
      /**
       * Format: int32
       * @description 路径方向
       */
      direction?: number;
      /**
       * Format: int32
       * @description 是否目标路径
       */
      isRequired?: number;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      pathPidList?: string[];
      /**
       * Format: int64
       * @description 路径编号
       */
      routeId?: number;
      /** @description 场景编号 */
      siteId?: string;
      siteIdList?: string[];
      /**
       * Format: int32
       * @description 生产状态
       */
      status?: number;
    };
    /** SiteCreateReq */
    SiteCreateReq: {
      /** @description 行政编号 */
      adminCode?: string;
      /**
       * Format: int32
       * @description 业务类型
       */
      bizType?: number;
      /** @description 标准化的4位城市编号 */
      cityCode?: string;
      /** @example yyyy-MM-dd hh:mm:ss */
      createTime?: string;
      /** @description 场景描述 */
      descName?: string;
      /**
       * Format: int32
       * @description 场景种别
       */
      kind?: number;
      /** @description 场景点位坐标，wkt格式 */
      locationWkt?: string;
      /** @description 场景图幅号 */
      mesh?: string;
      /** @description 扩展信息 */
      otherInfo?: string;
      /** @description 场景范围，wkt格式 */
      regionWkt?: string;
      /** @description 关联信息。点到点用来存用户id，PN伴生验证用来存关联的PN场编号，PN/PSP用来存充换电设备编号，拓路制图用来存储父场景 */
      related?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 场景状态。0:待下发，1:已下发，2：已删除
       */
      status?: number;
      /**
       * Format: int64
       * @description 场景标签
       */
      tag?: number;
      /**
       * Format: int32
       * @description 场景类型。点到点(1表示家，2表示公司)
       */
      type?: number;
      /** @example yyyy-MM-dd hh:mm:ss */
      updateTime?: string;
    };
    /** SiteDeleteReq */
    SiteDeleteReq: {
      /** @description 操作员 */
      operator?: string;
      /** @description 场景编号 */
      siteId?: string;
    };
    /** SiteInfo */
    SiteInfo: {
      /** @description 行政编号 */
      adminCode?: string;
      /**
       * Format: int32
       * @description 业务类型
       */
      bizType?: number;
      /** @description 标准化的4位城市编号 */
      cityCode?: string;
      /** @example yyyy-MM-dd hh:mm:ss */
      createTime?: string;
      /** @description 场景描述 */
      descName?: string;
      /**
       * Format: int32
       * @description 场景种别
       */
      kind?: number;
      /** @description 场景点位坐标，wkt格式 */
      locationWkt?: string;
      /** @description 场景图幅号 */
      mesh?: string;
      /** @description 扩展信息 */
      otherInfo?: string;
      /** @description 场景范围，wkt格式 */
      regionWkt?: string;
      /** @description 关联信息。点到点用来存用户id，PN伴生验证用来存关联的PN场编号，PN/PSP用来存充换电设备编号，拓路制图用来存储父场景 */
      related?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 场景状态。0:待下发，1:已下发，2：已删除
       */
      status?: number;
      /**
       * Format: int64
       * @description 场景标签
       */
      tag?: number;
      /**
       * Format: int32
       * @description 场景类型。点到点(1表示家，2表示公司)
       */
      type?: number;
      /** @example yyyy-MM-dd hh:mm:ss */
      updateTime?: string;
    };
    /** SiteInfoOpt */
    SiteInfoOpt: {
      /** @description 行政编号 */
      adminCode?: string;
      /**
       * Format: int32
       * @description 业务类型
       */
      bizType?: number;
      /** @description 核实操作类型。ADD//新增场景,UPDATE//场景更新,DELETE//场景删除,UNCHANGE//保持不变 */
      checkOptType?: string;
      /** @description 标准化的4位城市编号 */
      cityCode?: string;
      /** @example yyyy-MM-dd hh:mm:ss */
      createTime?: string;
      deleteOldCollect?: boolean;
      /** @description 场景描述 */
      descName?: string;
      /**
       * Format: int32
       * @description 场景种别
       */
      kind?: number;
      /** @description 场景点位坐标，wkt格式 */
      locationWkt?: string;
      /** @description 场景图幅号 */
      mesh?: string;
      needNewCollect?: boolean;
      /** @description 扩展信息 */
      otherInfo?: string;
      /** @description 场景范围，wkt格式 */
      regionWkt?: string;
      /** @description 关联信息。点到点用来存用户id，PN伴生验证用来存关联的PN场编号，PN/PSP用来存充换电设备编号，拓路制图用来存储父场景 */
      related?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 场景状态。0:待下发，1:已下发，2：已删除
       */
      status?: number;
      /**
       * Format: int64
       * @description 场景标签
       */
      tag?: number;
      /**
       * Format: int32
       * @description 场景类型。点到点(1表示家，2表示公司)
       */
      type?: number;
      /** @example yyyy-MM-dd hh:mm:ss */
      updateTime?: string;
    };
    /** SiteOptLog */
    SiteOptLog: {
      createTime?: components["schemas"]["Timestamp"];
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 操作日志编号
       */
      id?: number;
      /** @description 操作员 */
      operator?: string;
      /** @description 操作类型,枚举值与bizType相关 */
      optType?: string;
      /** @description 操作相关参数 */
      params?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 操作执行状态
       */
      status?: number;
      updateTime?: components["schemas"]["Timestamp"];
    };
    /** SiteOptLogQuery */
    SiteOptLogQuery: {
      /**
       * Format: int32
       * @description 业务分类
       */
      bizType?: number;
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /**
       * Format: int32
       * @description 操作日志编号
       */
      id?: number;
      /** @description 需求名称 */
      name?: string;
      /** @description 操作类型,枚举值与bizType相关 */
      optType?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 操作执行状态
       */
      status?: number;
    };
    /** SiteUpdateReq */
    SiteUpdateReq: {
      /** @description 行政编号 */
      adminCode?: string;
      /**
       * Format: int32
       * @description 业务类型
       */
      bizType?: number;
      /** @description 标准化的4位城市编号 */
      cityCode?: string;
      /** @example yyyy-MM-dd hh:mm:ss */
      createTime?: string;
      /**
       * @description 是否删除旧采集
       * @example false
       */
      deleteOldCollect?: boolean;
      /** @description 场景描述 */
      descName?: string;
      /**
       * Format: int32
       * @description 场景种别
       */
      kind?: number;
      /** @description 场景点位坐标，wkt格式 */
      locationWkt?: string;
      /** @description 场景图幅号 */
      mesh?: string;
      /**
       * @description 是否需要重新采集
       * @example false
       */
      needNewCollect?: boolean;
      /** @description 操作员 */
      operator?: string;
      /** @description 扩展信息 */
      otherInfo?: string;
      /** @description 场景范围，wkt格式 */
      regionWkt?: string;
      /** @description 关联信息。点到点用来存用户id，PN伴生验证用来存关联的PN场编号，PN/PSP用来存充换电设备编号，拓路制图用来存储父场景 */
      related?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 场景状态。0:待下发，1:已下发，2：已删除
       */
      status?: number;
      /**
       * Format: int64
       * @description 场景标签
       */
      tag?: number;
      /**
       * Format: int32
       * @description 场景类型。点到点(1表示家，2表示公司)
       */
      type?: number;
      /** @example yyyy-MM-dd hh:mm:ss */
      updateTime?: string;
    };
    /** SyncDemandInfoVo */
    SyncDemandInfoVo: {
      /**
       * Format: int32
       * @description 业务分类
       */
      bizType?: number;
      /** Format: int32 */
      checkedLogSum?: number;
      createTime?: components["schemas"]["Timestamp"];
      /**
       * Format: int32
       * @description 需求编号
       */
      demandId?: number;
      /**
       * Format: int32
       * @description 需求类型
       */
      demandType?: number;
      /** @description 需求描述 */
      desc?: string;
      /** Format: int32 */
      logNum?: number;
      /** @description 需求名称 */
      name?: string;
      /** @description 操作员 */
      operator?: string;
      /** @description 扩展信息。PN伴生验证用来存NDS版本号 */
      otherInfo?: string;
      /**
       * Format: int32
       * @description 场景数量
       */
      siteNum?: number;
      /**
       * Format: int32
       * @description 状态
       */
      status?: number;
      updateTime?: components["schemas"]["Timestamp"];
    };
    /** SyncLogCheckReq */
    SyncLogCheckReq: {
      /** @description 操作员 */
      operator?: string;
      /** @description 人工核实结果 */
      optCheckList?: components["schemas"]["SiteInfoOpt"][];
      /**
       * Format: int32
       * @description 检查日志编号
       */
      optLogId?: number;
    };
    /** Timestamp */
    Timestamp: {
      /** Format: int32 */
      date?: number;
      /** Format: int32 */
      day?: number;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      minutes?: number;
      /** Format: int32 */
      month?: number;
      /** Format: int32 */
      nanos?: number;
      /** Format: int32 */
      seconds?: number;
      /** Format: int64 */
      time?: number;
      /** Format: int32 */
      timezoneOffset?: number;
      /** Format: int32 */
      year?: number;
    };
    /** View */
    View: {
      contentType?: string;
    };
    /** 场景实体类 */
    "场景实体类": {
      /** @description 行政编号 */
      adminCode?: string;
      /**
       * Format: int32
       * @description 业务类型
       */
      bizType?: number;
      /** @description 业务类型名称 */
      bizTypeName?: string;
      /** @description 标准化的4位城市编号 */
      cityCode?: string;
      /** @description 城市名称 */
      cityName?: string;
      /** @example yyyy-MM-dd hh:mm:ss */
      createTime?: string;
      /** @description 场景描述 */
      descName?: string;
      /**
       * Format: int32
       * @description 场景种别
       */
      kind?: number;
      /** @description 场景点位坐标，wkt格式 */
      locationWkt?: string;
      /** @description 场景图幅号 */
      mesh?: string;
      /** @description 场景范围，wkt格式 */
      regionWkt?: string;
      /** @description 关联信息 */
      related?: string;
      /** @description 场景编号 */
      siteId?: string;
      /**
       * Format: int32
       * @description 场景状态
       */
      status?: number;
      /** @description 场景状态名称 */
      statusName?: string;
      /**
       * Format: int64
       * @description 场景标签
       */
      tag?: number;
      /** @description 场景标签名称 */
      tagName?: string;
      /**
       * Format: int32
       * @description 场景类型
       */
      type?: number;
      /** @description 场景类型名称 */
      typeName?: string;
      /** @example yyyy-MM-dd hh:mm:ss */
      updateTime?: string;
    };
    /** 场景查询条件实体类 */
    "场景查询条件实体类": {
      /**
       * Format: int32
       * @description 业务类型,如果不按场景编号查询，必须指定此字段
       */
      bizType?: number;
      /** @description 标准化的4位城市编号 */
      cityCode?: string;
      /**
       * Format: int32
       * @description 是否返回属性字段，默认是返回
       */
      hasAttrs?: number;
      /**
       * Format: int32
       * @description 是否返回几何字段，默认是返回
       */
      hasGeom?: number;
      /**
       * Format: int32
       * @description 场景种别
       */
      kind?: number;
      orderBy?: string;
      otherInfo?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** @description 空间检索多边形,wkt格式字符串 */
      polygonWkt?: string;
      /** @description 关联信息。点到点用来存用户id，PN伴生验证用来存关联的PN场编号，PN/PSP用来存充换电设备编号，拓路制图用来存储父场景 */
      related?: string;
      relatedList?: string[];
      /** @description 场景编号 */
      siteId?: string;
      /** @description 场景编号列表 */
      siteIdList?: string[];
      /**
       * Format: int32
       * @description 场景生产状态。0:待下发，1:已下发，2：已删除
       */
      status?: number;
      /**
       * Format: int32
       * @description 场景类型。点到点(1表示家，2表示公司)
       */
      type?: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** error */
  errorUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingPUT: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingDELETE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingOPTIONS: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingHEAD: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingPATCH: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingTRACE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** 返回业务类型的枚举值 */
  getBizTypeUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** checkLocationPoint */
  checkLocationPointUsingGET: {
    parameters: {
      query: {
        /** @description locationPoint */
        locationPoint: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«CheckLocationPointVO»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 需求明细的执行状态枚举值 */
  getDemandDetailStatusUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 需求执行状态枚举值 */
  getDemandStatusUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 返回需求类型的枚举值 */
  getDemandTypeUsingGET: {
    parameters: {
      path: {
        /** @description bizType */
        bizType: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 路径方向枚举值 */
  routeDirectionUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 路径状态枚举值 */
  getRouteStatusUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景种别枚举值 */
  getSiteKindUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景种别枚举值 */
  getSiteKindUsingGET_1: {
    parameters: {
      path: {
        /** @description bizType */
        bizType: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景变更操作状态枚举值 */
  getSiteOptStatusUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 业务类型下的场景操作类型枚举值 */
  getSiteOptTypeUsingGET: {
    parameters: {
      path: {
        /** @description bizType */
        bizType: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«string»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景生产状态枚举值 */
  getSiteStatusUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景类型枚举值(区分不同业务类型) */
  getSiteTypeUsingGET: {
    parameters: {
      path: {
        /** @description bizType */
        bizType: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,int»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 为生产需求添加场景 */
  addSitesUsingPOST: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          /**
           * Format: int32
           * @description 需求编号
           */
          demandId?: number;
          /** @description 是否触发采集 */
          needCollect?: boolean;
          /**
           * Format: binary
           * @description 场景文件
           */
          siteFile?: string;
          /** @description 场景编号列表 */
          siteIdList?: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Void»"];
          "multipart/form-data": components["schemas"]["ResponseVo«Void»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 执行PNPSP场景同步 */
  applySyncLogUsingGET: {
    parameters: {
      query: {
        /** @description demandId */
        demandId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Void»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 执行PNPSP场景同步 */
  applySyncLogUsingPOST: {
    parameters: {
      query: {
        /** @description demandId */
        demandId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Void»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 下载需求明细 */
  downloadDetailUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["DemandDetailQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 拓路制图业务为需求导入或下发场景 */
  importMapDemandUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["MapDemandImportSiteReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«DemandInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询需求列表 */
  queryUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["DemandInfoQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«DemandInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询需求明细列表 */
  queryDetailUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["DemandDetailQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«DemandDetailVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询场景分析任务 */
  querySyncTaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["DemandInfoQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«SyncDemandInfoVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 拓路制图更新生产 */
  reworkMapSiteUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["MapReworkReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«string»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建拓路制图同步场景需求 */
  syncMapSiteUsingPOST: {
    parameters: {
      query?: {
        /** @description 业务分类 */
        bizType?: number;
        /** @description 需求名称 */
        name?: string;
        /** @description 拓路建图新场景库版本号 */
        newDataVsn?: string;
        /** @description 操作员 */
        operator?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«int»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 新增/更新需求,业务类型和需求类型不能修改 */
  upsertDemandUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["DemandInfoReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«DemandInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建PNPSP资源验证需求 */
  verifyPnPspSiteUsingPOST: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          /**
           * Format: int32
           * @description 业务分类
           */
          bizType?: number;
          /**
           * Format: binary
           * @description 充电桩设备信息文件
           */
          csDeviceFile?: string;
          /** @description 任务描述 */
          desc?: string;
          /** @description 任务名称 */
          name?: string;
          /** @description 操作员 */
          operator?: string;
          /**
           * Format: binary
           * @description 换电站设备信息文件
           */
          psDeviceFile?: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«int»"];
          "multipart/form-data": components["schemas"]["ResponseVo«int»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingDELETE: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_2: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingDELETE_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_3: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_4: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_5: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_6: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_7: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_8: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_9: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_10: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_11: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/octet-stream": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_12: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_13: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_14: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingPOST: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
        "application/vnd.spring-boot.actuator.v2+json": {
          [key: string]: string;
        };
        "application/vnd.spring-boot.actuator.v3+json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_15: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_16: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_17: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_18: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain;version=0.0.4;charset=utf-8": Record<string, never>;
          "application/openmetrics-text;version=1.0.0;charset=utf-8": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_19: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_20: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain;charset=UTF-8": Record<string, never>;
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 加载操作日志 */
  getSiteOptLogUsingGET: {
    parameters: {
      path: {
        /** @description logId */
        logId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«object»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 核实操作日志 */
  checkOptLogUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SyncLogCheckReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Void»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询操作日志 */
  queryUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SiteOptLogQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«SiteOptLog»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 加载场景 */
  getByIdUsingGET: {
    parameters: {
      path: {
        /** @description siteId */
        siteId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«SiteInfo»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 手工创建场景信息 */
  createSiteUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SiteCreateReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«SiteInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 手工删除场景 */
  deleteSiteUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SiteDeleteReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«SiteInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 下载场景列表-前端页面 */
  downloadListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["场景查询条件实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 下载路径 */
  downloadRouteUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["RouteInfoQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": string;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询附近的场景列表 */
  nearbyListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["NearbyListReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«场景实体类»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询场景 */
  queryUsingPOST_2: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["场景查询条件实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«SiteInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询场景列表-前端页面 */
  queryListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["场景查询条件实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«场景实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询拓路制图子场景所属父场景列表 */
  queryMapParentSiteListUsingGET: {
    parameters: {
      path: {
        /** @description siteId */
        siteId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«SiteInfo»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询拓路制图复合场景的子场景信息列表 */
  queryMapSubSiteListUsingGET: {
    parameters: {
      path: {
        /** @description siteId */
        siteId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«SiteInfo»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询路径 */
  queryRouteUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["RouteInfoQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«RouteInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 手工修改场景信息 */
  updateSiteUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["SiteUpdateReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«SiteInfo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** links */
  linksUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            [key: string]: Record<string, never>;
          };
          "application/vnd.spring-boot.actuator.v3+json": {
            [key: string]: Record<string, never>;
          };
          "application/vnd.spring-boot.actuator.v2+json": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
}
