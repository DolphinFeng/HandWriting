/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/cross-produce-management/error": {
    /** error */
    get: operations["errorUsingGET"];
    /** error */
    put: operations["errorUsingPUT"];
    /** error */
    post: operations["errorUsingPOST"];
    /** error */
    delete: operations["errorUsingDELETE"];
    /** error */
    options: operations["errorUsingOPTIONS"];
    /** error */
    head: operations["errorUsingHEAD"];
    /** error */
    patch: operations["errorUsingPATCH"];
    /** error */
    trace: operations["errorUsingTRACE"];
  };
  "/cross-produce-management/batch/addMssCross": {
    /** 按MSS协议添加场景 */
    post: operations["addMssCrossUsingPOST"];
  };
  "/cross-produce-management/batch/cleanCross": {
    /** 场景下线 */
    post: operations["cleanCrossUsingPOST"];
  };
  "/cross-produce-management/batch/create": {
    /** 创建批次 */
    post: operations["createUsingPOST"];
  };
  "/cross-produce-management/batch/query": {
    /** 查询批次列表 */
    post: operations["queryUsingPOST"];
  };
  "/cross-produce-management/batch/queryCross": {
    /** 查询批次中路口列表 */
    post: operations["queryCrossUsingPOST"];
  };
  "/cross-produce-management/batch/terminateCross": {
    /** 场景终止生产 */
    post: operations["terminateCrossUsingPOST"];
  };
  "/cross-produce-management/batch/transferCross": {
    /** 为场景转移批次 */
    post: operations["transferCrossUsingPOST"];
  };
  "/cross-produce-management/batch/updateBatch": {
    /** 更新批次设置 */
    post: operations["updateBatchUsingPOST"];
  };
  "/cross-produce-management/batch/updateCross": {
    /** 更新路口 */
    post: operations["updateCrossUsingPOST"];
  };
  "/cross-produce-management/collect/createPnPspCollectTask": {
    /** 触发PN/PSP采集任务 */
    get: operations["createPnPspCollectTaskUsingGET"];
  };
  "/cross-produce-management/collect/cross/query": {
    /** 查询路口列表 */
    post: operations["queryUsingPOST_2"];
  };
  "/cross-produce-management/collect/material/query": {
    /** 查询资料列表 */
    post: operations["queryUsingPOST_1"];
  };
  "/cross-produce-management/collect/reCreateCollectTask": {
    /** 触发资料补采任务 */
    post: operations["reCreateCollectTaskUsingPOST"];
  };
  "/cross-produce-management/collect/scanMaterial": {
    /** 触发资料扫描 */
    get: operations["triggerCollectMaterialScanUsingGET"];
    /** 触发资料扫描 */
    post: operations["triggerCollectMaterialScanUsingPOST"];
  };
  "/cross-produce-management/config/create": {
    /** 创建配置参数 */
    post: operations["createUsingPOST_1"];
  };
  "/cross-produce-management/config/query/processList/{produceMode}": {
    /** 查询指定生产模式的环节列表 */
    get: operations["queryProcessListUsingGET"];
  };
  "/cross-produce-management/config/query/public/{produceMode}": {
    /** 查询指定生产模式默认的配置参数列表 */
    get: operations["queryPublicUsingGET"];
  };
  "/cross-produce-management/config/query/{groupName}": {
    /** 查询配置参数列表 */
    get: operations["queryUsingGET"];
  };
  "/cross-produce-management/cross/byId/{id}": {
    /** query */
    get: operations["queryUsingGET_1"];
  };
  "/cross-produce-management/cross/query": {
    /** query */
    post: operations["queryUsingPOST_3"];
  };
  "/cross-produce-management/cross/triggerSiteFenceAndVector": {
    /** triggerSiteFenceAndVector */
    post: operations["triggerSiteFenceAndVectorUsingPOST"];
  };
  "/cross-produce-management/cross/upsert": {
    /** upsert */
    post: operations["upsertUsingPOST"];
  };
  "/cross-produce-management/cross/scanNewTransferData": {
    /** scanNewTransferData */
    get: operations["scanNewTransferDataUsingGET"];
  };
  "/cross-produce-management/inferEval/batchInferEvalTask/create": {
    /** 创建批量推理打分任务 */
    post: operations["createBatchUsingPOST"];
  };
  "/cross-produce-management/inferEval/batchInferEvalTask/detail": {
    /** 批量推理打分任务详情 */
    post: operations["detailUsingPOST"];
  };
  "/cross-produce-management/inferEval/batchInferEvalTask/detailList": {
    /** 批量推理打分任务明细列表 */
    post: operations["batchDetailListUsingPOST"];
  };
  "/cross-produce-management/inferEval/batchInferEvalTask/list": {
    /** 批量推理打分任务列表 */
    post: operations["batchListUsingPOST"];
  };
  "/cross-produce-management/inferEval/batchInferEvalTask/transferInferEvalResult": {
    /** 批量推理打分结果转移至合规环境 */
    post: operations["transferInferEvalResultUsingPOST"];
  };
  "/cross-produce-management/inferEval/inferEvalCompareTask/create": {
    /** 创建推理打分对比任务 */
    post: operations["inferEvalStatisticsUsingPOST"];
  };
  "/cross-produce-management/inferEval/inferEvalCompareTask/resultList": {
    /** 推理打分对比结果列表 */
    post: operations["selectInferEvalCompareResultListUsingPOST"];
  };
  "/cross-produce-management/mappingtask/annotation/selectList": {
    /** 数据管理数据送表列表接口 */
    post: operations["annotationSelectListUsingPOST"];
  };
  "/cross-produce-management/mappingtask/annotation/streamsourceUuidList": {
    /** 送表数据源ID列表接口 */
    post: operations["annotationStreamsourceUuidListUsingPOST"];
  };
  "/cross-produce-management/mappingtask/annotation/updateBudget": {
    /** 修改标注预算UUID */
    post: operations["updateBudgetUsingPOST"];
  };
  "/cross-produce-management/mappingtask/annotation/updateStreamTask": {
    /** 修改标注任务ID */
    post: operations["updateStreamTaskUsingPOST"];
  };
  "/cross-produce-management/mappingtask/batchAnnotation/create": {
    /** 创建批量送标任务 */
    post: operations["createBatchAnnotationUsingPOST"];
  };
  "/cross-produce-management/mappingtask/batchMappingTask/batchList": {
    /** 批量路口刷库批次列表 */
    post: operations["batchMappingTaskListUsingPOST"];
  };
  "/cross-produce-management/mappingtask/batchMappingTask/cancelTask": {
    /** 批量刷库任务取消 */
    get: operations["cancelTaskUsingGET"];
    /** 批量刷库任务取消 */
    post: operations["cancelTaskUsingPOST"];
  };
  "/cross-produce-management/mappingtask/batchMappingTask/create": {
    /** 创建批量路口刷库任务 */
    post: operations["createBatchMappingTaskUsingPOST"];
  };
  "/cross-produce-management/mappingtask/batchMappingTask/retryFailedInplace": {
    /** 批量刷库任务失败原地重试 */
    get: operations["retryFailedInplaceUsingGET"];
    /** 批量刷库任务失败原地重试 */
    post: operations["retryFailedInplaceUsingPOST"];
  };
  "/cross-produce-management/mappingtask/batchMappingTask/taskList": {
    /** 批量路口刷库刷库任务列表 */
    post: operations["batchMappingSubTaskListUsingPOST"];
  };
  "/cross-produce-management/mappingtask/perception/ci/{taskId}": {
    /** 获取点云建图任务的CrossInformation.json文件内容 */
    get: operations["getCrossInformationUsingGET"];
  };
  "/cross-produce-management/mappingtask/produceData/exportLatestPerceptionResult": {
    /** 导出最新的点云建图数据集列表 */
    get: operations["exportLatestPerceptionResultUsingGET"];
  };
  "/cross-produce-management/mappingtask/produceData/getLatestModelDatasetByCross/{crossId}": {
    /** 获取最新模型建图及上游点云建图的数据集信息 */
    get: operations["getLatestModelDatasetByCrossUsingGET"];
  };
  "/cross-produce-management/mappingtask/produceData/getValidResultsByCross/{mappingTaskType}/{crossId}": {
    /** 按路口查询有效建图结果 */
    get: operations["getValidResultsByCrossUsingGET"];
  };
  "/cross-produce-management/mappingtask/produceData/list": {
    /** 数据管理列表接口 */
    post: operations["produceDataListUsingPOST"];
  };
  "/cross-produce-management/mappingtask/produceData/listData": {
    /** 只查询建图结果接口 */
    post: operations["listDataUsingPOST"];
  };
  "/cross-produce-management/mappingtask/produceTask/getMappingTaskByDiffId/{diffId}": {
    /** 按变化源编号查询建图任务信息 */
    get: operations["getMappingTaskByDiffIdUsingGET"];
  };
  "/cross-produce-management/mappingtask/produceTask/list": {
    /** 建图任务列表接口 */
    post: operations["listMappingTaskVoUsingPOST"];
  };
  "/cross-produce-management/mappingtask/produceTask/list-simple": {
    /** 建图任务列表接口 */
    post: operations["listMappingTaskUsingPOST"];
  };
  "/cross-produce-management/mappingtask/produceTask/retryFailedAutoTask": {
    /** 建图任务失败重试 */
    post: operations["retryFailedAutoTaskUsingPOST"];
  };
  "/cross-produce-management/mergetask/getMergeTaskNameList": {
    /** 获取融合任务名列表 */
    get: operations["getMergeTaskNameListUsingGET"];
  };
  "/cross-produce-management/mergetask/mergeBackSubtask/create": {
    /** 创建融合回退任务 */
    post: operations["createMergeBackSubtaskUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/create": {
    /** 创建融合任务 */
    post: operations["createMergeSubtaskUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/crosslist": {
    /** 融合任务路口明细列表 */
    post: operations["queryCrossMergeSubtaskListUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/getTmsFields/{bizType}": {
    /** 获得融合流程配置字段 */
    get: operations["getTmsFieldsUsingGET"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/list": {
    /** 融合任务列表 */
    post: operations["mergeSubtaskListUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/setNdsVsn": {
    /** 设置NDS版本号 */
    post: operations["setNdsVsnUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/triggerMergeRevert": {
    /** 触发融合任务状态重置，手扶操作 */
    get: operations["triggerMergeRevertUsingGET"];
    /** 触发融合任务状态重置，手扶操作 */
    post: operations["triggerMergeRevertUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/triggerMergeSelect": {
    /** 触发融合筛选任务，手扶操作 */
    get: operations["triggerMergeSelectUsingGET"];
    /** 触发融合筛选任务，手扶操作 */
    post: operations["triggerMergeSelectUsingPOST"];
  };
  "/cross-produce-management/mergetask/mergeSubtask/triggerMergeTask": {
    /** 触发融合任务 */
    get: operations["triggerMergeTaskUsingGET"];
    /** 触发融合任务 */
    post: operations["triggerMergeTaskUsingPOST"];
  };
  "/cross-produce-management/actuator/beans": {
    /** handle */
    get: operations["handleUsingGET"];
  };
  "/cross-produce-management/actuator/caches": {
    /** handle */
    get: operations["handleUsingGET_1"];
    /** handle */
    delete: operations["handleUsingDELETE"];
  };
  "/cross-produce-management/actuator/caches/{cache}": {
    /** handle */
    get: operations["handleUsingGET_2"];
    /** handle */
    delete: operations["handleUsingDELETE_1"];
  };
  "/cross-produce-management/actuator/conditions": {
    /** handle */
    get: operations["handleUsingGET_3"];
  };
  "/cross-produce-management/actuator/configprops": {
    /** handle */
    get: operations["handleUsingGET_4"];
  };
  "/cross-produce-management/actuator/configprops/{prefix}": {
    /** handle */
    get: operations["handleUsingGET_5"];
  };
  "/cross-produce-management/actuator/env": {
    /** handle */
    get: operations["handleUsingGET_6"];
  };
  "/cross-produce-management/actuator/env/{toMatch}": {
    /** handle */
    get: operations["handleUsingGET_7"];
  };
  "/cross-produce-management/actuator/features": {
    /** handle */
    get: operations["handleUsingGET_8"];
  };
  "/cross-produce-management/actuator/health": {
    /** handle */
    get: operations["handleUsingGET_9"];
  };
  "/cross-produce-management/actuator/health/**": {
    /** handle */
    get: operations["handleUsingGET_10"];
  };
  "/cross-produce-management/actuator/heapdump": {
    /** handle */
    get: operations["handleUsingGET_11"];
  };
  "/cross-produce-management/actuator/info": {
    /** handle */
    get: operations["handleUsingGET_12"];
  };
  "/cross-produce-management/actuator/loggers": {
    /** handle */
    get: operations["handleUsingGET_13"];
  };
  "/cross-produce-management/actuator/loggers/{name}": {
    /** handle */
    get: operations["handleUsingGET_14"];
    /** handle */
    post: operations["handleUsingPOST"];
  };
  "/cross-produce-management/actuator/mappings": {
    /** handle */
    get: operations["handleUsingGET_15"];
  };
  "/cross-produce-management/actuator/metrics": {
    /** handle */
    get: operations["handleUsingGET_16"];
  };
  "/cross-produce-management/actuator/metrics/{requiredMetricName}": {
    /** handle */
    get: operations["handleUsingGET_17"];
  };
  "/cross-produce-management/actuator/prometheus": {
    /** handle */
    get: operations["handleUsingGET_18"];
  };
  "/cross-produce-management/actuator/refresh": {
    /** handle */
    post: operations["handleUsingPOST_1"];
  };
  "/cross-produce-management/actuator/scheduledtasks": {
    /** handle */
    get: operations["handleUsingGET_19"];
  };
  "/cross-produce-management/actuator/threaddump": {
    /** handle */
    get: operations["handleUsingGET_20"];
  };
  "/cross-produce-management/produce/getPerceptionByDiffId/{diffSourceId}": {
    /** 按变化源编号获得感知建图任务 */
    get: operations["getPerceptionByDiffIdUsingGET"];
  };
  "/cross-produce-management/produce/submitDiff/{mappingResultId}": {
    /** 触发变化源入库 */
    get: operations["submitDiffUsingGET"];
  };
  "/cross-produce-management/produce/task/query": {
    /** 查询生产任务列表 */
    post: operations["queryUsingPOST_4"];
  };
  "/cross-produce-management/progress/getCityCrossNum": {
    /** 查询分城市路口交付数 */
    post: operations["getCityCrossNumUsingPOST"];
  };
  "/cross-produce-management/progress/getCityCrossNumByProcess": {
    /** 分城市查询路口交付进度 */
    post: operations["getCityCrossNumByProcessUsingPOST"];
  };
  "/cross-produce-management/progress/getCrossNumByCityLevel": {
    /** 查询汇总路口交付数 */
    get: operations["getCrossNumByCityLevelUsingGET"];
    /** 查询汇总路口交付数 */
    post: operations["getCrossNumByCityLevelUsingPOST"];
  };
  "/cross-produce-management/progress/getDailyTaskNum": {
    /** 查询任务进度明细 */
    post: operations["getDailyTaskNumUsingPOST"];
  };
  "/cross-produce-management/progress/getTotalCrossNum": {
    /** 查询汇总路口交付数 */
    post: operations["getTotalCrossNumUsingPOST"];
  };
  "/cross-produce-management/progress/getTotalCrossNumByProcess": {
    /** 查询路口交付进度 */
    post: operations["getTotalCrossNumByProcessUsingPOST"];
  };
  "/cross-produce-management/progress/getTotalTaskNumByProcess": {
    /** 查询任务处理进度 */
    post: operations["getTotalTaskNumByProcessUsingPOST"];
  };
  "/cross-produce-management/project/query": {
    /** 查询项目列表 */
    post: operations["queryUsingPOST_5"];
  };
  "/cross-produce-management/taskHistory/query": {
    /** 路口任务履历 */
    get: operations["queryUsingGET_2"];
    /** 路口任务履历 */
    post: operations["queryUsingPOST_6"];
  };
  "/cross-produce-management/user/oauth2/authorize/callback": {
    /** oauth2登录回调地址 */
    get: operations["authorizeCallbackUsingGET"];
  };
  "/cross-produce-management/util/exportMonthlyMaterialUuid/{month}": {
    /** 按月导出采集资料uuid */
    get: operations["exportMonthlyMaterialUuidUsingGET"];
  };
  "/cross-produce-management/util/exportMonthlyPerceptionResult/{month}": {
    /** 按月导出点云建图数据 */
    get: operations["exportMonthlyPerceptionResultUsingGET"];
  };
  "/cross-produce-management/util/getBusinessTypeList": {
    /** 获取产线列表接口 */
    get: operations["getBusinessTypeListUsingGET"];
  };
  "/cross-produce-management/util/getCIFileByTaskId/{taskId}": {
    /** 解析CI文件 */
    get: operations["parseCIByTaskIdUsingGET"];
  };
  "/cross-produce-management/util/getCityList": {
    /** 获取城市列表 */
    get: operations["getCityListUsingGET"];
  };
  "/cross-produce-management/util/getCurrentEvalAlgVsn": {
    /** 获取当前推理打分算法版本 */
    get: operations["getCurrentEvalAlgVsnUsingGET"];
  };
  "/cross-produce-management/util/getEvalAlgVsnList": {
    /** 获取推理打分算法版本列表 */
    get: operations["getEvalAlgVsnListUsingGET"];
  };
  "/cross-produce-management/util/getInferAlgVsnList": {
    /** 获取推理算法版本列表 */
    get: operations["getInferAlgVsnListUsingGET"];
  };
  "/cross-produce-management/util/getMergeLineList": {
    /** 获取融合类型接口 */
    get: operations["getMergeLineListUsingGET"];
  };
  "/cross-produce-management/util/inferEvalRefreshResult": {
    /** inferEvalRefreshResult */
    post: operations["inferEvalRefreshResultUsingPOST"];
  };
  "/cross-produce-management/util/parseKwargsByAipInput": {
    /** 获取点云建图任务输入 */
    post: operations["parseKwargsByAipInputUsingPOST"];
  };
  "/cross-produce-management/actuator": {
    /** links */
    get: operations["linksUsingGET"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AnnotationSelectQuery */
    AnnotationSelectQuery: {
      algVsn?: string;
      /** Format: int64 */
      batchId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市编号 */
      cityCodes?: string[];
      /** @description 路口场景 */
      crossTags?: number[];
      /** @description 道路等级 */
      crossTypes?: number[];
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int32
       * @description 建图完成路径占比起始
       */
      routeSuccessPerBegin?: number;
      /**
       * Format: int32
       * @description 建图完成路径占比终止
       */
      routeSuccessPerEnd?: number;
      /**
       * Format: int32
       * @description 路口路径总数起始
       */
      routeTotalCountBegin?: number;
      /**
       * Format: int32
       * @description 路口路径总数终止
       */
      routeTotalCountEnd?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** Format: int32 */
      tag?: number;
    };
    /** AnnotationSelectVo */
    AnnotationSelectVo: {
      adminCode?: string;
      /** @description 算法版本 */
      algVsn?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      createTime?: string;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 路口类型 */
      crossTag?: string;
      /** @description 数据集clipId */
      datasetClip?: string;
      /** @description 数据集名称 */
      datasetName?: string;
      /**
       * Format: int64
       * @description 流水号
       */
      mappingResultId?: number;
      /**
       * Format: int64
       * @description 任务编号
       */
      mappingTaskId?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 覆盖路径数
       */
      routeNum?: number;
      /**
       * Format: int32
       * @description 路径数量
       */
      routeTotalCount?: number;
      /** @description 状态 */
      status?: string;
      /** Format: int32 */
      tag?: number;
      /** Format: int32 */
      type?: number;
    };
    /** BatchCross */
    BatchCross: {
      /** Format: int64 */
      batchId?: number;
      /** Format: int32 */
      collectRouteNum?: number;
      /** Format: int32 */
      collectStatus?: number;
      /** Format: int32 */
      collectTaskNum?: number;
      /** Format: int32 */
      collectedRouteNum?: number;
      /** Format: int32 */
      collectedTaskNum?: number;
      createTime?: components["schemas"]["Timestamp"];
      crossId?: string;
      /** Format: int32 */
      entireRouteNum?: number;
      /** Format: int32 */
      entireTaskNum?: number;
      /** Format: int32 */
      finishedRouteNum?: number;
      /** Format: int32 */
      finishedTaskNum?: number;
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      projectId?: number;
      requiredRoutes?: string;
      status?: string;
      updateTime?: components["schemas"]["Timestamp"];
    };
    /** BatchCrossQuery */
    BatchCrossQuery: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市名称列表 */
      cityNameList?: string[];
      /** Format: int32 */
      collectStatus?: number;
      /** @description 路口编号 */
      crossId?: string;
      crossIdList?: string[];
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      endTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startTime?: string;
      /** @description 采集状态 */
      status?: string;
      statusList?: string[];
    };
    /** BatchInferEvalTask */
    BatchInferEvalTask: {
      /** @description 打分刷库任务描述 */
      batchInferEvalTaskDesc?: string;
      /**
       * Format: int32
       * @description 打分刷库任务编号
       */
      batchInferEvalTaskId?: number;
      /** @description 打分刷库任务名称 */
      batchInferEvalTaskName?: string;
      /** @description 城市名称列表，多个时用英文逗号分割 */
      cityList?: string;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      createTime?: string;
      diffFileAllKey?: string;
      diffFileInputKey?: string;
      /**
       * Format: int32
       * @description 变化源数量
       */
      diffNumAll?: number;
      /** Format: int32 */
      diffNumInput?: number;
      /** @description 打分算法版本 */
      evalAlgVsn?: string;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      /**
       * Format: int32
       * @description 融合任务ID
       */
      mergeSubtaskId?: number;
      /** @description 创建人 */
      operator?: string;
      /** @description 项目编号 */
      projectId?: string;
      /** @description 项目编号列表，多个时用英文逗号分割 */
      projectIds?: string;
      /** @description 任务状态 */
      status?: string;
      /** @description tms任务号 */
      tmsTaskId?: string;
      /** Format: date-time */
      updateTime?: string;
    };
    /** BatchInferEvalTaskDetailQuery */
    BatchInferEvalTaskDetailQuery: {
      /**
       * Format: int32
       * @description 打分刷库任务编号
       */
      batchInferEvalTaskId?: number;
      /** @description 建图实体编号 */
      crossId?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
    };
    /** BatchInferEvalTaskDetailVo */
    BatchInferEvalTaskDetailVo: {
      /**
       * Format: int32
       * @description 刷库任务编号
       */
      batchInferEvalTaskId?: number;
      cosKey?: string;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 建图实体编号 */
      crossId?: string;
      /** @description 变化源编号 */
      diffId?: string;
      /** @description 打分算法版本 */
      evalAlgVsn?: string;
      /**
       * Format: int64
       * @description 记录ID
       */
      id?: number;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      /** @description 打分结果明细 */
      inferEvalDetail?: string;
      /** Format: int64 */
      mappingTaskId?: number;
      /** @description 打分通过路径 */
      validRoute?: string;
    };
    /** BatchInferEvalTaskQuery */
    BatchInferEvalTaskQuery: {
      /**
       * Format: int32
       * @description 打分刷库任务编号
       */
      batchInferEvalTaskId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目ID
       */
      projectId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** @description 执行状态 */
      status?: string;
      tmsTaskId?: string;
    };
    /** BatchMappingSubTaskQuery */
    BatchMappingSubTaskQuery: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /**
       * Format: int64
       * @description 刷库任务编号
       */
      batchMappingTaskId?: number;
      batchMappingTaskName?: string;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名称 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 路口编号 */
      crossId?: string;
      /**
       * Format: int64
       * @description 路口任务编号
       */
      crossTaskId?: number;
      /** @description 路口任务执行状态 */
      crossTaskStatus?: string;
      crossTaskStatusList?: string[];
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** @description 状态 */
      status?: string;
      triggerStatus?: string;
    };
    /** BatchMappingSubTaskVo */
    BatchMappingSubTaskVo: {
      aipTaskId?: string;
      /** @description aip平台workflow任务页面跳转地址 */
      aipTaskUrl?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: int64
       * @description 刷库任务编号
       */
      batchMappingTaskId?: number;
      /** @description 刷库任务类型 */
      batchMappingTaskType?: string;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名称 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 路口任务编号 */
      crossTaskId?: string;
      /** @description 路口任务执行状态 */
      crossTaskStatus?: string;
      /** @description 路口类型 */
      crossType?: string;
      /**
       * Format: int32
       * @description 输入覆盖路径数
       */
      inputRouteNum?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 采集完成路径数
       */
      routeCollectedCount?: number;
      /**
       * Format: int32
       * @description 路径总数
       */
      routeTotalCount?: number;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      startTime?: string;
    };
    /** BatchMappingTaskQuery */
    BatchMappingTaskQuery: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /**
       * Format: int64
       * @description 刷库任务编号
       */
      batchMappingTaskId?: number;
      batchMappingTaskName?: string;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名称 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** @description 状态 */
      status?: string;
    };
    /** BatchMappingTaskVo */
    BatchMappingTaskVo: {
      /** @description 批次编号 */
      batchId?: string;
      /** @description 刷库任务描述 */
      batchMappingTaskDesc?: string;
      /**
       * Format: int64
       * @description 刷库任务编号
       */
      batchMappingTaskId?: number;
      /** @description 刷库任务名称 */
      batchMappingTaskName?: string;
      /** @description 刷库任务类型 */
      batchMappingTaskType?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /**
       * Format: int32
       * @description 任务路口数
       */
      crossNum?: number;
      /**
       * Format: date-time
       * @description 任务结束时间
       */
      endTime?: string;
      /** @description 创建人 */
      operator?: string;
      sourceMappingResultType?: string;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      startTime?: string;
      /** @description 状态 */
      status?: string;
      /** @description 任务参数 */
      taskParams?: string;
    };
    /** CleanCrossReq */
    CleanCrossReq: {
      crossIdList?: string[];
      /** Format: int64 */
      projectId?: number;
      sourceType?: string;
    };
    /** CollectMaterialQuery */
    CollectMaterialQuery: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /**
       * Format: int64
       * @description 采集任务编号
       */
      collectTaskId?: number;
      /** @description 路口编号 */
      crossId?: string;
      crossList?: string[];
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      endTime?: string;
      eventGroupId?: string;
      /**
       * Format: int64
       * @description 资料编号
       */
      materialId?: number;
      materialIdList?: number[];
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /**
       * Format: int64
       * @description 路径编号
       */
      routeId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startTime?: string;
      /** @description 采集状态 */
      status?: string;
      statusList?: string[];
    };
    /** CollectMaterialVo */
    CollectMaterialVo: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /** @description 批次名 */
      batchName?: string;
      /**
       * Format: int64
       * @description 采集任务编号
       */
      collectTaskId?: number;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 资料会话编号 */
      eventGroupId?: string;
      /**
       * Format: int64
       * @description 资料编号
       */
      materialId?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      recordIdx?: string;
      /**
       * Format: int64
       * @description 路径编号
       */
      routeId?: number;
      /**
       * Format: int32
       * @description 数据分段
       */
      section?: number;
      /** @description 资料使用状态 */
      status?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
      /** @description uuid */
      uuid?: string;
    };
    /** ComboSite */
    ComboSite: {
      comboSitePid?: string;
      /** Format: int32 */
      kind?: number;
      siteList?: string[];
    };
    /** CreateProduceTaskMsg */
    CreateProduceTaskMsg: {
      comboSites?: components["schemas"]["ComboSite"][];
      /** Format: int32 */
      mappingMode?: number;
      sites?: components["schemas"]["Site"][];
      sourceId?: string;
      sourceType?: string;
      type?: string;
    };
    /** CrossmapKwargsVo */
    CrossmapKwargsVo: {
      base_dataset_clip_id?: string;
      base_dataset_env?: string;
      base_dataset_nickname?: string;
      dataset_custom_clip_id?: string;
      dataset_custom_raw_clip_id?: string;
      dataset_nickname?: string;
      /** Format: int32 */
      expected_route_number?: number;
      junct_id?: string;
      map_id?: string;
      /** Format: int32 */
      route_number?: number;
      tripDataList?: components["schemas"]["TripData"][];
    };
    /** DimCity */
    DimCity: {
      cityCode?: string;
      cityLevel?: string;
      cityName?: string;
      /** Format: int32 */
      cityOrder?: number;
      /** Format: int32 */
      cityTag?: number;
      provName?: string;
    };
    /** InferEvalCompareResultQuery */
    InferEvalCompareResultQuery: {
      /** @description 城市名称 */
      cityName?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** @description 推理打分算法版本 */
      evalAlgVsn?: string;
      /**
       * Format: int32
       * @description 打分结果对比任务编号
       */
      inferEvalCompareTaskId?: number;
      /** @description 新版推理算法版本 */
      newInferAlgVsn?: string;
      /**
       * Format: int32
       * @description 新版融合任务ID
       */
      newMergeSubtaskId?: number;
      /** @description 旧版推理算法版本 */
      oldInferAlgVsn?: string;
      /**
       * Format: int32
       * @description 旧版融合任务ID
       */
      oldMergeSubtaskId?: number;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
    };
    /** InferEvalCompareResultVo */
    InferEvalCompareResultVo: {
      cityName?: string;
      /** Format: date-time */
      createTime?: string;
      detialFileDownloadUrl?: string;
      detialFileKey?: string;
      /** Format: int64 */
      id?: number;
      /** Format: int32 */
      inferEvalCompareTaskId?: number;
      /** Format: int64 */
      newRouteValidNum?: number;
      /** Format: int64 */
      oldRouteNum?: number;
      /** Format: int64 */
      oldRouteValidNum?: number;
      routeNum4AddPer?: string;
      routeNum4BadPer?: string;
      routeNum4BetterPer?: string;
      routeNum4DropPer?: string;
      routeNum4UnchangePer?: string;
      /** Format: int64 */
      routeNumAdd?: number;
      /** Format: int64 */
      routeNumBad?: number;
      /** Format: int64 */
      routeNumBetter?: number;
      /** Format: int64 */
      routeNumDrop?: number;
      /** Format: int64 */
      routeNumUnchange?: number;
      /** Format: int64 */
      routeNumUnknow?: number;
    };
    /** InferEvalCompareTask */
    InferEvalCompareTask: {
      /** @description 城市名称列表，多个时用英文逗号分割 */
      cityList?: string;
      /** Format: date-time */
      createTime?: string;
      /** @description 建图实体编号列表，多个时用英文逗号分割 */
      crossList?: string;
      /**
       * Format: int32
       * @description 路口统计范围
       */
      crossScopeType?: number;
      /** @description 推理打分算法版本 */
      evalAlgVsn?: string;
      /** @description 打分结果对比任务描述 */
      inferEvalCompareTaskDesc?: string;
      /** Format: int32 */
      inferEvalCompareTaskId?: number;
      /** @description 打分结果对比任务名称 */
      inferEvalCompareTaskName?: string;
      /** @description 新版推理算法版本 */
      newInferAlgVsn?: string;
      /**
       * Format: int32
       * @description 新版融合任务ID
       */
      newMergeSubtaskId?: number;
      /** @description 旧版推理算法版本 */
      oldInferAlgVsn?: string;
      /**
       * Format: int32
       * @description 旧版融合任务ID
       */
      oldMergeSubtaskId?: number;
      operator?: string;
      /** @description 项目编号列表，多个时用英文逗号分割 */
      projectIds?: string;
      /** @description 目标路径编号列表，多个时用英文逗号分割 */
      routeList?: string;
      /**
       * Format: int32
       * @description 路径统计范围
       */
      routeScopeType?: number;
      status?: string;
      /** Format: date-time */
      updateTime?: string;
    };
    /** Link */
    Link: {
      href?: string;
      templated?: boolean;
    };
    /** MappingResult */
    MappingResult: {
      algVsn?: string;
      annotationStatus?: string;
      /** Format: int64 */
      batchId?: number;
      /** Format: date-time */
      createTime?: string;
      crossId?: string;
      datasetClip?: string;
      datasetName?: string;
      /** Format: int64 */
      flowId?: number;
      /** Format: int64 */
      mappingResultId?: number;
      mappingResultType?: string;
      /** Format: int64 */
      mappingTaskId?: number;
      /** Format: int64 */
      projectId?: number;
      resultStoreInfo?: string;
      routeList?: string;
      /** Format: int32 */
      routeNum?: number;
      sourceType?: string;
      status?: string;
    };
    /** MappingResultQuery */
    MappingResultQuery: {
      aipTaskId?: string;
      /** @description 算法版本 */
      algVsn?: string;
      algVsnList?: string[];
      annotationStatus?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /** @description 批次IDs，多个用英文逗号分割 */
      batchIds?: string;
      batchMappingTaskIdList?: number[];
      /** @description 刷库任务编号,多个用英文逗号分割 */
      batchMappingTaskIds?: string;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名称 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市编号列表 */
      cityCodeList?: string[];
      /** @description 城市名称列表 */
      cityNameList?: string[];
      /** @description 路口编号 */
      crossId?: string;
      crossIdList?: string[];
      /** @description 路口编号,多个用英文逗号分割 */
      crossIds?: string;
      crossStatusList?: string[];
      datasetClip?: string;
      datasetName?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** Format: date-time */
      endEndTime?: string;
      /** Format: int64 */
      flowId?: number;
      /**
       * Format: int64
       * @description 流水号
       */
      mappingResultId?: number;
      /** @description 数据类型 */
      mappingResultType?: string;
      mappingResultTypeList?: string[];
      /**
       * Format: int64
       * @description 任务编号
       */
      mappingTaskId?: number;
      mappingTaskIdList?: number[];
      /** @description 任务名称 */
      mappingTaskName?: string;
      /** @description 任务类型 */
      mappingTaskType?: string;
      mappingTaskTypeList?: string[];
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /** Format: int32 */
      retryTimesLimit?: number;
      sourceType?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** Format: date-time */
      startEndTime?: string;
      /** Format: date-time */
      startUpdateTime?: string;
      /** @description 执行状态 */
      status?: string;
      statusList?: string[];
    };
    /** MappingTask */
    MappingTask: {
      aipTaskId?: string;
      algVsn?: string;
      /** Format: int64 */
      batchId?: number;
      crossId?: string;
      datasetClip?: string;
      datasetName?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: int64 */
      flowId?: number;
      inputMaterial?: string;
      inputRoute?: string;
      /** Format: int32 */
      inputRouteNum?: number;
      /** Format: int64 */
      mappingTaskId?: number;
      mappingTaskName?: string;
      mappingTaskType?: string;
      msg?: string;
      operator?: string;
      /** Format: int64 */
      projectId?: number;
      /** Format: int32 */
      retryTimes?: number;
      sourceType?: string;
      /** Format: date-time */
      startTime?: string;
      status?: string;
      /** Format: int64 */
      visualTaskId?: number;
    };
    /** MappingTaskQuery */
    MappingTaskQuery: {
      aipTaskId?: string;
      /** @description 算法版本 */
      algVsn?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名称 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市名称列表 */
      cityNameList?: string[];
      /** @description 路口编号 */
      crossId?: string;
      crossIdList?: string[];
      crossStatusList?: string[];
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** Format: date-time */
      endEndTime?: string;
      /** Format: int64 */
      flowId?: number;
      /**
       * Format: int64
       * @description 任务编号
       */
      mappingTaskId?: number;
      mappingTaskIdList?: number[];
      /** @description 任务名称 */
      mappingTaskName?: string;
      /** @description 任务类型 */
      mappingTaskType?: string;
      mappingTaskTypeList?: string[];
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /** Format: int32 */
      retryTimesLimit?: number;
      sourceType?: string;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** Format: date-time */
      startEndTime?: string;
      /** Format: date-time */
      startUpdateTime?: string;
      /** @description 执行状态 */
      status?: string;
      statusList?: string[];
    };
    /** ModelAndView */
    ModelAndView: {
      empty?: boolean;
      model?: Record<string, never>;
      modelMap?: {
        [key: string]: Record<string, never>;
      };
      reference?: boolean;
      /** @enum {string} */
      status?: "ACCEPTED" | "ALREADY_REPORTED" | "BAD_GATEWAY" | "BAD_REQUEST" | "BANDWIDTH_LIMIT_EXCEEDED" | "CHECKPOINT" | "CONFLICT" | "CONTINUE" | "CREATED" | "DESTINATION_LOCKED" | "EXPECTATION_FAILED" | "FAILED_DEPENDENCY" | "FORBIDDEN" | "FOUND" | "GATEWAY_TIMEOUT" | "GONE" | "HTTP_VERSION_NOT_SUPPORTED" | "IM_USED" | "INSUFFICIENT_SPACE_ON_RESOURCE" | "INSUFFICIENT_STORAGE" | "INTERNAL_SERVER_ERROR" | "I_AM_A_TEAPOT" | "LENGTH_REQUIRED" | "LOCKED" | "LOOP_DETECTED" | "METHOD_FAILURE" | "METHOD_NOT_ALLOWED" | "MOVED_PERMANENTLY" | "MOVED_TEMPORARILY" | "MULTIPLE_CHOICES" | "MULTI_STATUS" | "NETWORK_AUTHENTICATION_REQUIRED" | "NON_AUTHORITATIVE_INFORMATION" | "NOT_ACCEPTABLE" | "NOT_EXTENDED" | "NOT_FOUND" | "NOT_IMPLEMENTED" | "NOT_MODIFIED" | "NO_CONTENT" | "OK" | "PARTIAL_CONTENT" | "PAYLOAD_TOO_LARGE" | "PAYMENT_REQUIRED" | "PERMANENT_REDIRECT" | "PRECONDITION_FAILED" | "PRECONDITION_REQUIRED" | "PROCESSING" | "PROXY_AUTHENTICATION_REQUIRED" | "REQUESTED_RANGE_NOT_SATISFIABLE" | "REQUEST_ENTITY_TOO_LARGE" | "REQUEST_HEADER_FIELDS_TOO_LARGE" | "REQUEST_TIMEOUT" | "REQUEST_URI_TOO_LONG" | "RESET_CONTENT" | "SEE_OTHER" | "SERVICE_UNAVAILABLE" | "SWITCHING_PROTOCOLS" | "TEMPORARY_REDIRECT" | "TOO_EARLY" | "TOO_MANY_REQUESTS" | "UNAUTHORIZED" | "UNAVAILABLE_FOR_LEGAL_REASONS" | "UNPROCESSABLE_ENTITY" | "UNSUPPORTED_MEDIA_TYPE" | "UPGRADE_REQUIRED" | "URI_TOO_LONG" | "USE_PROXY" | "VARIANT_ALSO_NEGOTIATES";
      view?: components["schemas"]["View"];
      viewName?: string;
    };
    /** PageVo«AnnotationSelectVo» */
    "PageVo«AnnotationSelectVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["AnnotationSelectVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«BatchInferEvalTaskDetailVo» */
    "PageVo«BatchInferEvalTaskDetailVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["BatchInferEvalTaskDetailVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«BatchInferEvalTask» */
    "PageVo«BatchInferEvalTask»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["BatchInferEvalTask"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«BatchMappingSubTaskVo» */
    "PageVo«BatchMappingSubTaskVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["BatchMappingSubTaskVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«BatchMappingTaskVo» */
    "PageVo«BatchMappingTaskVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["BatchMappingTaskVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«CollectMaterialVo» */
    "PageVo«CollectMaterialVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["CollectMaterialVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«InferEvalCompareResultVo» */
    "PageVo«InferEvalCompareResultVo»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["InferEvalCompareResultVo"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«MappingTask» */
    "PageVo«MappingTask»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["MappingTask"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«批次实体类» */
    "PageVo«批次实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["批次实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«批次路口实体类» */
    "PageVo«批次路口实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["批次路口实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«批量融合任务实体类» */
    "PageVo«批量融合任务实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["批量融合任务实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«批量融合路口任务明细实体类» */
    "PageVo«批量融合路口任务明细实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["批量融合路口任务明细实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«数据管理实体类» */
    "PageVo«数据管理实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["数据管理实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«生产任务信息类» */
    "PageVo«生产任务信息类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["生产任务信息类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«生产流程任务信息实体类» */
    "PageVo«生产流程任务信息实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["生产流程任务信息实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«路口实体类» */
    "PageVo«路口实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["路口实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** PageVo«项目实体类» */
    "PageVo«项目实体类»": {
      /** Format: int32 */
      code?: number;
      cursor?: Record<string, never>;
      data?: components["schemas"]["项目实体类"][];
      msg?: string;
      /** Format: int64 */
      totalCount?: number;
    };
    /** Path */
    Path: {
      /** Format: int32 */
      direction?: number;
      /** Format: int64 */
      inRoadId?: number;
      /** Format: int32 */
      matched?: number;
      /** Format: int64 */
      outRoadId?: number;
      pathPid?: string;
      /** Format: int64 */
      routeId?: number;
      /** Format: int64 */
      tags?: number;
      viaRoadIds?: number[];
    };
    /** ProduceTaskQuery */
    ProduceTaskQuery: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      branchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市名称列表 */
      cityNameList?: string[];
      /** @description 路口编号 */
      crossId?: string;
      /** @description 变化源编号 */
      diffSourceId?: string;
      diffSourceIdList?: string[];
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      execEnv?: string;
      /**
       * Format: int64
       * @description 建图成果编号
       */
      mappingResultId?: number;
      mergeSubtaskIdList?: number[];
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      produceTaskIdList?: number[];
      /** @description 任务类型 */
      produceTaskType?: string;
      productName?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** @description 执行状态 */
      status?: string;
      /** Format: int64 */
      upperDataVersion?: number;
    };
    /** ProjectQuery */
    ProjectQuery: {
      /**
       * Format: date-time
       * @description 项目创建时间查询的截止时间
       */
      endTime?: string;
      /** @description 操作员 */
      operator?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 场景类型
       */
      siteKind?: number;
      /**
       * Format: date-time
       * @description 项目创建时间查询的开始时间
       */
      startTime?: string;
      /** @description 状态列表 */
      statusList?: string[];
    };
    /** ResponseVo */
    ResponseVo: {
      /** Format: int32 */
      code?: number;
      data?: Record<string, never>;
      msg?: string;
    };
    /** ResponseVo«BatchInferEvalTask» */
    "ResponseVo«BatchInferEvalTask»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["BatchInferEvalTask"];
      msg?: string;
    };
    /** ResponseVo«CrossmapKwargsVo» */
    "ResponseVo«CrossmapKwargsVo»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["CrossmapKwargsVo"];
      msg?: string;
    };
    /** ResponseVo«List«BatchCross»» */
    "ResponseVo«List«BatchCross»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["BatchCross"][];
      msg?: string;
    };
    /** ResponseVo«List«DimCity»» */
    "ResponseVo«List«DimCity»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["DimCity"][];
      msg?: string;
    };
    /** ResponseVo«List«StatCityCrossNumVo»» */
    "ResponseVo«List«StatCityCrossNumVo»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["StatCityCrossNumVo"][];
      msg?: string;
    };
    /** ResponseVo«List«StatCityNumVo»» */
    "ResponseVo«List«StatCityNumVo»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["StatCityNumVo"][];
      msg?: string;
    };
    /** ResponseVo«List«StatDailyTaskNumVo»» */
    "ResponseVo«List«StatDailyTaskNumVo»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["StatDailyTaskNumVo"][];
      msg?: string;
    };
    /** ResponseVo«List«StatNumByProgressVo»» */
    "ResponseVo«List«StatNumByProgressVo»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["StatNumByProgressVo"][];
      msg?: string;
    };
    /** ResponseVo«List«TaskHistoryVo»» */
    "ResponseVo«List«TaskHistoryVo»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["TaskHistoryVo"][];
      msg?: string;
    };
    /** ResponseVo«List«string»» */
    "ResponseVo«List«string»»": {
      /** Format: int32 */
      code?: number;
      data?: string[];
      msg?: string;
    };
    /** ResponseVo«List«批次路口实体类»» */
    "ResponseVo«List«批次路口实体类»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["批次路口实体类"][];
      msg?: string;
    };
    /** ResponseVo«List«融合任务名称实体类»» */
    "ResponseVo«List«融合任务名称实体类»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["融合任务名称实体类"][];
      msg?: string;
    };
    /** ResponseVo«List«配置参数类»» */
    "ResponseVo«List«配置参数类»»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["配置参数类"][];
      msg?: string;
    };
    /** ResponseVo«MappingTask» */
    "ResponseVo«MappingTask»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["MappingTask"];
      msg?: string;
    };
    /** ResponseVo«Map«string,List«StatCityCrossNumVo»»» */
    "ResponseVo«Map«string,List«StatCityCrossNumVo»»»": {
      /** Format: int32 */
      code?: number;
      data?: {
        [key: string]: components["schemas"]["StatCityCrossNumVo"][];
      };
      msg?: string;
    };
    /** ResponseVo«Map«string,string»» */
    "ResponseVo«Map«string,string»»": {
      /** Format: int32 */
      code?: number;
      data?: {
        [key: string]: string;
      };
      msg?: string;
    };
    /** ResponseVo«StatCityCrossNumVo» */
    "ResponseVo«StatCityCrossNumVo»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["StatCityCrossNumVo"];
      msg?: string;
    };
    /** ResponseVo«boolean» */
    "ResponseVo«boolean»": {
      /** Format: int32 */
      code?: number;
      data?: boolean;
      msg?: string;
    };
    /** ResponseVo«int» */
    "ResponseVo«int»": {
      /** Format: int32 */
      code?: number;
      /** Format: int32 */
      data?: number;
      msg?: string;
    };
    /** ResponseVo«object» */
    "ResponseVo«object»": {
      /** Format: int32 */
      code?: number;
      data?: Record<string, never>;
      msg?: string;
    };
    /** ResponseVo«string» */
    "ResponseVo«string»": {
      /** Format: int32 */
      code?: number;
      data?: string;
      msg?: string;
    };
    /** ResponseVo«批次实体类» */
    "ResponseVo«批次实体类»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["批次实体类"];
      msg?: string;
    };
    /** ResponseVo«路口实体类» */
    "ResponseVo«路口实体类»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["路口实体类"];
      msg?: string;
    };
    /** ResponseVo«配置参数类» */
    "ResponseVo«配置参数类»": {
      /** Format: int32 */
      code?: number;
      data?: components["schemas"]["配置参数类"];
      msg?: string;
    };
    /** SectionData */
    SectionData: {
      allUuid?: string[];
      /** Format: int64 */
      collectTaskId?: number;
      groupId?: string;
      /** Format: int64 */
      materialId?: number;
      /** @enum {string} */
      materialSourceType?: "AO" | "DLB";
      /** @enum {string} */
      sectionType?: "ACC_RECOLLECT" | "ENTIRE" | "FIRST_HALF" | "LAST_HALF" | "NO_DATA";
      selectedUuid?: string[];
      /** @enum {string} */
      status?: "CREATED" | "DELETED" | "HOLD" | "INVALID" | "USED" | "USING";
    };
    /** Site */
    Site: {
      /** Format: int32 */
      adminCode?: number;
      basemapVersion?: string;
      descName?: string;
      deviceId?: string;
      /** Format: int32 */
      kind?: number;
      location?: string;
      /** Format: int64 */
      mainNodeId?: number;
      paths?: components["schemas"]["Path"][];
      /** Format: int32 */
      priority?: number;
      /** Format: int32 */
      pvRank?: number;
      region?: string;
      sitePid?: string;
      /** Format: int64 */
      tags?: number;
      tile?: string;
      /** Format: int32 */
      type?: number;
      updateTime?: string;
    };
    /** StatCityCrossNumVo */
    StatCityCrossNumVo: {
      /**
       * Format: int64
       * @description 检查通过路口数
       */
      checkCrossNum?: number;
      /** @description 城市编码 */
      cityCode?: string;
      /** @description 城市等级 */
      cityLevel?: string;
      /** @description 城市名 */
      cityName?: string;
      /**
       * Format: int32
       * @description 城市序号
       */
      cityOrder?: number;
      /**
       * Format: int64
       * @description 下发采集路口数
       */
      collectCrossNum?: number;
      /**
       * Format: int64
       * @description 资料回流路口数
       */
      collectedCrossNum?: number;
      /**
       * Format: int64
       * @description 创建路口数
       */
      createCrossNum?: number;
      /**
       * Format: int64
       * @description 推理路口数
       */
      inferenceCrossNum?: number;
      /**
       * Format: int64
       * @description 融合成功路口数
       */
      mergeCrossNum?: number;
      /**
       * Format: int64
       * @description 模型建图路口数
       */
      modelCrossNum?: number;
      /**
       * Format: int64
       * @description 点云建图路口数
       */
      perceptionCrossNum?: number;
    };
    /** StatCityNumVo */
    StatCityNumVo: {
      /**
       * Format: int64
       * @description 批次路口数
       */
      batchCrossNum?: number;
      /** @description 城市编码 */
      cityCode?: string;
      /** @description 城市等级 */
      cityLevel?: string;
      /** @description 城市名 */
      cityName?: string;
      /**
       * Format: int32
       * @description 城市序号
       */
      cityOrder?: number;
      /**
       * Format: int64
       * @description 已采集路口数
       */
      collectCrossNum?: number;
      /**
       * Format: int64
       * @description 生产路口数
       */
      crossNum?: number;
      /** @description 日期 */
      date?: string;
      /**
       * Format: int64
       * @description 失败路口数
       */
      failureCrossNum?: number;
      /**
       * Format: int64
       * @description 失败任务数
       */
      failureTaskNum?: number;
      /**
       * Format: int64
       * @description 无效路口数
       */
      invalidCrossNum?: number;
      /**
       * Format: int64
       * @description 无效任务数
       */
      invalidTaskNum?: number;
      /** @description 生产环节 */
      processKey?: string;
      /** @description 生产环节显示名 */
      processName?: string;
      /**
       * Format: int64
       * @description 执行中任务数
       */
      runningTaskNum?: number;
      /**
       * Format: int64
       * @description 交付路口数
       */
      successCrossNum?: number;
      /**
       * Format: int64
       * @description 成功任务数
       */
      successTaskNum?: number;
      /**
       * Format: int64
       * @description 任务数
       */
      taskNum?: number;
      /**
       * Format: int64
       * @description 有效路口数
       */
      validCrossNum?: number;
      /**
       * Format: int64
       * @description 有效任务数
       */
      validTaskNum?: number;
    };
    /** StatDailyTaskNumVo */
    StatDailyTaskNumVo: {
      /**
       * Format: int64
       * @description 累计失败任务数
       */
      addedFailureTaskNum?: number;
      /**
       * Format: int64
       * @description 累计成功任务数
       */
      addedSuccessTaskNum?: number;
      /**
       * Format: int64
       * @description 累计任务数
       */
      addedTaskNum?: number;
      /** Format: int64 */
      crossNum?: number;
      /** @description 日期 */
      date?: string;
      /**
       * Format: int64
       * @description 失败任务数
       */
      failureTaskNum?: number;
      /**
       * Format: int64
       * @description 执行中任务数
       */
      runningTaskNum?: number;
      /**
       * Format: int64
       * @description 成功任务数
       */
      successTaskNum?: number;
      /**
       * Format: int64
       * @description 任务数
       */
      taskNum?: number;
      /**
       * Format: int64
       * @description 有效任务数
       */
      validTaskNum?: number;
    };
    /** StatNumByProgressVo */
    StatNumByProgressVo: {
      /**
       * Format: int64
       * @description 批次路口数
       */
      batchCrossNum?: number;
      /**
       * Format: int64
       * @description 已采集路口数
       */
      collectCrossNum?: number;
      /**
       * Format: int64
       * @description 生产路口数
       */
      crossNum?: number;
      /** @description 日期 */
      date?: string;
      /**
       * Format: int64
       * @description 失败路口数
       */
      failureCrossNum?: number;
      /**
       * Format: int64
       * @description 失败任务数
       */
      failureTaskNum?: number;
      /**
       * Format: int64
       * @description 无效路口数
       */
      invalidCrossNum?: number;
      /**
       * Format: int64
       * @description 无效任务数
       */
      invalidTaskNum?: number;
      /** @description 生产环节 */
      processKey?: string;
      /** @description 生产环节显示名 */
      processName?: string;
      /**
       * Format: int64
       * @description 执行中任务数
       */
      runningTaskNum?: number;
      /**
       * Format: int64
       * @description 交付路口数
       */
      successCrossNum?: number;
      /**
       * Format: int64
       * @description 成功任务数
       */
      successTaskNum?: number;
      /**
       * Format: int64
       * @description 任务数
       */
      taskNum?: number;
      /**
       * Format: int64
       * @description 有效路口数
       */
      validCrossNum?: number;
      /**
       * Format: int64
       * @description 有效任务数
       */
      validTaskNum?: number;
    };
    /** TaskHistoryVo */
    TaskHistoryVo: {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      createTime?: string;
      /** @description 路口编号 */
      crossId?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /**
       * Format: int64
       * @description 路径编号
       */
      routeId?: number;
      /** @description 任务编号 */
      taskId?: string;
      /** @description 任务状态 */
      taskStatus?: string;
      /** @description 任务类型 */
      taskType?: string;
      /**
       * Format: date-time
       * @description 最后更新时间
       */
      updateTime?: string;
    };
    /** Timestamp */
    Timestamp: {
      /** Format: int32 */
      date?: number;
      /** Format: int32 */
      day?: number;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      minutes?: number;
      /** Format: int32 */
      month?: number;
      /** Format: int32 */
      nanos?: number;
      /** Format: int32 */
      seconds?: number;
      /** Format: int64 */
      time?: number;
      /** Format: int32 */
      timezoneOffset?: number;
      /** Format: int32 */
      year?: number;
    };
    /** TransferCrossReq */
    TransferCrossReq: {
      crossIdList?: string[];
      /** Format: int64 */
      newBatchId?: number;
      /** Format: int64 */
      oldBatchId?: number;
    };
    /** TripData */
    TripData: {
      /** Format: int32 */
      clipNum?: number;
      /** Format: int64 */
      materialId?: number;
      routeId?: string;
      sectionDataList?: components["schemas"]["SectionData"][];
    };
    /** UpdateBatchCrossReq */
    UpdateBatchCrossReq: {
      updatedCrossList?: components["schemas"]["UpdatedCross"][];
    };
    /** UpdatedCross */
    UpdatedCross: {
      crossId?: string;
      routes?: number[];
    };
    /** View */
    View: {
      contentType?: string;
    };
    /** 创建融合任务实体类 */
    "创建融合任务实体类": {
      /** @description base融合任务 */
      baseTask?: string;
      /**
       * Format: int32
       * @description base版本准出但新版本未准出的路径数量<=
       */
      baseValidRouteNum?: number;
      /**
       * Format: double
       * @description base版本准出但新版本未准出路径数量占比<=
       */
      baseValidRouteRate?: number;
      /** @description 批次编号列表字符串，英文逗号分隔 */
      batchList?: string;
      /**
       * Format: int32
       * @description 融合产线类型
       */
      businessType?: number;
      /** @description 城市名称列表字符串，英文逗号分隔 */
      cityList?: string;
      /** @description 对比后数据筛选模式 */
      compareSelectType?: string;
      /** Format: date-time */
      createTime?: string;
      /** @description 建图实体编号字符串，多个用英文逗号分隔 */
      crossIdList?: string;
      /**
       * Format: int32
       * @description 路口总量
       */
      crossNum?: number;
      crossStatistics?: string;
      /** @description 路口类型编号列表字符串，英文逗号分隔 */
      crossTypeList?: string;
      /**
       * Format: int32
       * @description 新版本准出但base版本未准出的路径数量>=
       */
      curValidRouteNum?: number;
      /**
       * Format: double
       * @description 新版本准出但base版本未准出的路径数数量占比>=
       */
      curValidRouteRate?: number;
      /** @description 推理打分算法版本 */
      evalAlgVsn?: string;
      execEnv?: string;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      /** @description 推理打分任务ID */
      inferevalTaskId?: string;
      /** @description ndsVsn版本号 */
      ndsVsn?: string;
      operator?: string;
      /** @description 项目编号列表字符串，英文逗号分隔 */
      projectIdList?: string;
      /** @description 融合状态 */
      status?: string;
      /** @description 融合任务描述 */
      subtaskDesc?: string;
      /**
       * Format: int32
       * @description 融合任务ID
       */
      subtaskId?: number;
      /** @description 融合任务名称 */
      subtaskName?: string;
      taskName?: string;
      /** @description 融合流程配置 */
      tmsConfig?: string;
      tmsTaskId?: string;
      /** Format: date-time */
      updateTime?: string;
      /**
       * @description 是否启动推理打分对比及路口替换
       * @example false
       */
      useCompare?: boolean;
    };
    /** 创建资料补采实体类 */
    "创建资料补采实体类": {
      /** @description 批次编号，批量时提供 */
      batchIds?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 建图实体编号，批量时提供 */
      crossIds?: string;
      /**
       * @description 旧资料是否废弃
       * @example false
       */
      dropOldMaterial?: boolean;
    };
    /** 建图任务重试请求实体 */
    "建图任务重试请求实体": {
      /**
       * Format: int32
       * @description 生产模式
       */
      businessType?: number;
      /**
       * Format: date-time
       * @description 任务创建时间查询的截止时间
       */
      endCreateTime?: string;
      /**
       * Format: date-time
       * @description 任务结束时间查询的截止时间
       */
      endEndTime?: string;
      /** @description 任务类型 */
      mappingTaskType?: string;
      operator?: string;
      /** @description 重试类型 */
      retryType?: string;
      /**
       * Format: date-time
       * @description 任务创建时间查询的开始时间
       */
      startCreateTime?: string;
      /**
       * Format: date-time
       * @description 任务结束时间查询的开始时间
       */
      startEndTime?: string;
    };
    /** 批次实体类 */
    "批次实体类": {
      /** @description 批次描述 */
      batchDesc?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /** @description 批次名 */
      batchName?: string;
      /**
       * Format: int32
       * @description 生产模式
       */
      businessType?: number;
      configParam?: string;
      /** @description 批次配置参数列表 */
      configParamList?: components["schemas"]["配置参数类"][];
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /**
       * Format: int32
       * @description 路口数量
       */
      crossNum?: number;
      /** @description 操作员 */
      operator?: string;
      /** @description 批次环节列表 */
      processList?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 场景类型
       */
      siteKind?: number;
      /** @description 执行状态 */
      status?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** 批次查询实体类 */
    "批次查询实体类": {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /** @description 批次名 */
      batchName?: string;
      /** @description 批次名称列表 */
      batchNameList?: string[];
      /**
       * Format: int32
       * @description 生产模式
       */
      businessType?: number;
      businessTypeList?: number[];
      /**
       * Format: date-time
       * @description 批次创建时间查询的截止时间
       */
      endTime?: string;
      /** @description 操作员 */
      operator?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      processName?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      projectName?: string;
      /**
       * Format: int32
       * @description 场景类型
       */
      siteKind?: number;
      /**
       * Format: date-time
       * @description 批次创建时间查询的开始时间
       */
      startTime?: string;
      statusList?: string[];
    };
    /** 批次路口实体类 */
    "批次路口实体类": {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /**
       * Format: int32
       * @description 采集资料数
       */
      collectMaterialNum?: number;
      /**
       * Format: int32
       * @description 采集路径数,排序字段名：collect_route_num
       */
      collectRouteNum?: number;
      /** Format: int32 */
      collectStatus?: number;
      /**
       * Format: int32
       * @description 采集任务数，排序字段名:collect_task_num
       */
      collectTaskNum?: number;
      /** @description 采集平台跳转链接 */
      collectUrl?: string;
      /**
       * Format: int32
       * @description 有数据路径数,排序字段名：collected_route_num
       */
      collectedRouteNum?: number;
      /**
       * Format: int32
       * @description 有数据任务数,排序字段名：collected_task_num
       */
      collectedTaskNum?: number;
      /**
       * Format: date-time
       * @description 任务最早创建时间,排序字段名：create_time
       */
      createTime?: string;
      /** @description 路口编号 */
      crossId?: string;
      /**
       * Format: int32
       * @description 路口类型
       */
      crossType?: number;
      /** @description 路口类型描述 */
      crossTypeDesc?: string;
      /** @description 路口详情链接 */
      detailUrl?: string;
      /**
       * Format: int32
       * @description 有完整数据路径数,排序字段名：entire_route_num
       */
      entireRouteNum?: number;
      /**
       * Format: int32
       * @description 有完整数据任务数,排序字段名：entire_task_num
       */
      entireTaskNum?: number;
      /**
       * Format: int32
       * @description 已结束路径数,排序字段名：finished_route_num
       */
      finishedRouteNum?: number;
      /**
       * Format: int32
       * @description 已结束任务数,排序字段名：finished_task_num
       */
      finishedTaskNum?: number;
      /**
       * Format: int32
       * @description 分叉口数量
       */
      furcationCount?: number;
      /**
       * Format: int64
       * @description 批次路口流水号
       */
      id?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /** @description 执行状态 */
      status?: string;
      /**
       * Format: date-time
       * @description 资料最后回传时间,排序字段名：update_time
       */
      updateTime?: string;
      /**
       * Format: int32
       * @description 筛选资料数
       */
      vectorTrjCount?: number;
    };
    /** 批量融合任务实体类 */
    "批量融合任务实体类": {
      /** @description base融合任务 */
      baseTask?: string;
      /**
       * Format: int32
       * @description base版本准出但新版本未准出的路径数量<=
       */
      baseValidRouteNum?: number;
      /**
       * Format: double
       * @description base版本准出但新版本未准出路径数量占比<=
       */
      baseValidRouteRate?: number;
      /** @description 批次编号列表字符串，英文逗号分隔 */
      batchList?: string;
      /** @description 产品库分支 */
      branchName?: string;
      /**
       * Format: int32
       * @description 融合产线类型
       */
      businessType?: number;
      /** @description 城市名称列表字符串，英文逗号分隔 */
      cityList?: string;
      /** @description 对比后数据筛选模式 */
      compareSelectType?: string;
      /** Format: date-time */
      createTime?: string;
      /** @description 建图实体编号字符串，多个用英文逗号分隔 */
      crossIdList?: string;
      /**
       * Format: int32
       * @description 路口总量
       */
      crossNum?: number;
      crossStatistics?: string;
      /** @description 路口类型编号列表字符串，英文逗号分隔 */
      crossTypeList?: string;
      /** @description 路口类型路口量 */
      crossTypeStatistics?: string;
      /**
       * Format: int32
       * @description 新版本准出但base版本未准出的路径数量>=
       */
      curValidRouteNum?: number;
      /**
       * Format: double
       * @description 新版本准出但base版本未准出的路径数数量占比>=
       */
      curValidRouteRate?: number;
      /** @description 数据规格 */
      dataSpec?: string;
      /** @description 推理打分算法版本 */
      evalAlgVsn?: string;
      execEnv?: string;
      /** @description 调度方式 */
      execMode?: string;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      /** @description 推理算法版本量 */
      inferAlgVsnStatistics?: string;
      /** @description 推理打分任务ID */
      inferevalTaskId?: string;
      /** @description 融合版本 */
      mergeTaskType?: string;
      /** @description ndsVsn版本号 */
      ndsVsn?: string;
      operator?: string;
      /** @description 产品库名称 */
      productName?: string;
      /** @description 项目编号列表字符串，英文逗号分隔 */
      projectIdList?: string;
      /** @description 融合状态 */
      status?: string;
      /** @description 融合任务描述 */
      subtaskDesc?: string;
      /**
       * Format: int32
       * @description 融合任务ID
       */
      subtaskId?: number;
      /** @description 融合任务名称 */
      subtaskName?: string;
      taskName?: string;
      /** @description 融合流程配置 */
      tmsConfig?: string;
      tmsTaskId?: string;
      /** Format: date-time */
      updateTime?: string;
      /**
       * @description 是否启动推理打分对比及路口替换
       * @example false
       */
      useCompare?: boolean;
    };
    /** 批量融合任务查询实体类 */
    "批量融合任务查询实体类": {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /** @description 产品库分支名称 */
      branchName?: string;
      /**
       * Format: int32
       * @description 融合产线类型
       */
      businessType?: number;
      cityList?: string[];
      /** @description 路口编号 */
      crossId?: string;
      crossList?: string[];
      evalAlgVsn?: string;
      execEnv?: string;
      inferAlgVsn?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** @description 产品库名称 */
      productName?: string;
      projectIdList?: number[];
      /** @description 融合状态 */
      status?: string;
      /** Format: int32 */
      subtaskId?: number;
      /** @description 融合任务名称 */
      subtaskName?: string;
      tmsTaskId?: string;
    };
    /** 批量融合路口任务明细实体类 */
    "批量融合路口任务明细实体类": {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /** @description 产品库分支 */
      branchName?: string;
      /** @description 城市编码 */
      cityCode?: string;
      /** @description 城市名称 */
      cityName?: string;
      cosKey?: string;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 路口编号 */
      crossId?: string;
      /**
       * Format: int32
       * @description 路口类型
       */
      crossType?: number;
      /** @description 路口类型描述 */
      crossTypeDesc?: string;
      /** @description 变化源编号 */
      diffSourceId?: string;
      /** @description 推理打分算法版本 */
      evalAlgVsn?: string;
      /** @description 推理算法版本 */
      inferAlgVsn?: string;
      /** Format: int64 */
      inferEvalId?: number;
      invalidRoute?: string;
      /**
       * Format: int64
       * @description 建图成果编号
       */
      mappingResultId?: number;
      /** Format: int64 */
      mappingTaskId?: number;
      /**
       * Format: int32
       * @description 融合任务ID
       */
      mergeSubtaskId?: number;
      /** @description 融合版本 */
      mergeTaskType?: string;
      /**
       * Format: int64
       * @description 生产任务编号
       */
      produceTaskId?: number;
      /** @description 产品库名称 */
      productName?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 路径数
       */
      routeNum?: number;
      /** @description 融合状态 */
      status?: string;
      /** @description 融合任务名称 */
      subtaskName?: string;
      tmsConfig?: string;
      /** @description tms任务编号 */
      tmsTaskId?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
      /**
       * @description 是否启用推理排序
       * @example false
       */
      useCompare?: boolean;
      validRoute?: string;
    };
    /** 批量路口刷库任务创建实体类 */
    "批量路口刷库任务创建实体类": {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      batchIdList?: number[];
      /** @description 批次编号，批量时提供 */
      batchIds?: string;
      /** @description 刷库任务类型 */
      batchMappingTaskType?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市名称列表字符串，英文逗号分隔 */
      cityList?: string;
      crossIdList?: string[];
      /** @description 路口编号，批量路口时提供 */
      crossIds?: string;
      /**
       * Format: date-time
       * @description 筛选待刷数据的截止时间
       */
      endCreateTime?: string;
      /** @description 上一个历史算法版本 */
      lastAlgVsn?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      sourceMappingResultType?: string;
      /**
       * Format: date-time
       * @description 筛选待刷数据的起始时间
       */
      startCreateTime?: string;
      /** @description 任务描述 */
      taskDesc?: string;
      /** @description 任务名称 */
      taskName?: string;
      userName?: string;
    };
    /** 批量路口送标任务创建实体类 */
    "批量路口送标任务创建实体类": {
      algVsn?: string;
      /** Format: int64 */
      batchId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 城市编号 */
      cityCodes?: string[];
      /** @description 路口场景 */
      crossTags?: number[];
      /** @description 道路等级 */
      crossTypes?: number[];
      /**
       * Format: date-time
       * @description 创建时间查询的截止时间
       */
      endCreateTime?: string;
      /** @description 送标数据源ID */
      labelingTaskId?: string;
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /**
       * Format: int32
       * @description 建图完成路径占比起始
       */
      routeSuccessPerBegin?: number;
      /**
       * Format: int32
       * @description 建图完成路径占比终止
       */
      routeSuccessPerEnd?: number;
      /**
       * Format: int32
       * @description 路口路径总数起始
       */
      routeTotalCountBegin?: number;
      /**
       * Format: int32
       * @description 路口路径总数终止
       */
      routeTotalCountEnd?: number;
      /**
       * Format: date-time
       * @description 创建时间查询的开始时间
       */
      startCreateTime?: string;
      /** Format: int32 */
      tag?: number;
      /** @description 任务描述 */
      taskDesc?: string;
      userName?: string;
    };
    /** 数据管理实体类 */
    "数据管理实体类": {
      /** @description 行政区划编号 */
      adminCode?: string;
      /** @description 算法版本 */
      algVsn?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: int64
       * @description 刷库任务编号
       */
      batchMappingTaskId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      createTime?: string;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 路口类型 */
      crossType?: string;
      /** @description 数据集clipId */
      datasetClip?: string;
      /** @description 数据集名称 */
      datasetName?: string;
      /**
       * Format: int64
       * @description 流水号
       */
      mappingResultId?: number;
      /** @description 数据类型 */
      mappingResultType?: string;
      /**
       * Format: int64
       * @description 任务编号
       */
      mappingTaskId?: number;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /** @description 存储信息 */
      resultStoreInfo?: string;
      /**
       * Format: int32
       * @description 覆盖路径数
       */
      routeNum?: number;
      /**
       * Format: int32
       * @description 路径总数
       */
      routeTotalCount?: number;
      /** @description 状态 */
      status?: string;
    };
    /** 生产任务信息类 */
    "生产任务信息类": {
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /** @description 批次名 */
      batchName?: string;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 路口编号 */
      crossId?: string;
      /**
       * Format: int32
       * @description 路口类型
       */
      crossType?: number;
      /** @description 路口类型描述 */
      crossTypeDesc?: string;
      /** @description 路口详情链接 */
      detailUrl?: string;
      /** @description 变化源编号 */
      diffSourceId?: string;
      /**
       * Format: int64
       * @description 建图任务编号
       */
      mappingResultId?: number;
      /** @description 任务执行信息 */
      msg?: string;
      /**
       * Format: int64
       * @description 生产任务编号
       */
      produceTaskId?: number;
      /** @description 生产任务类型 */
      produceTaskType?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /** @description 结果存储信息 */
      resultStoreInfo?: string;
      /**
       * Format: int32
       * @description 路径数
       */
      routeNum?: number;
      /** @description 执行状态 */
      status?: string;
      /** @description tms任务编号 */
      tmsTaskId?: string;
      /** @description tms任务链接 */
      tmsTaskUrl?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
    /** 生产流程任务信息实体类 */
    "生产流程任务信息实体类": {
      aipTaskId?: string;
      /** @description aip平台workflow任务页面跳转地址 */
      aipTaskUrl?: string;
      /** @description 算法版本 */
      algVsn?: string;
      /**
       * Format: int64
       * @description 批次编号
       */
      batchId?: number;
      /**
       * Format: int32
       * @description 产线模式
       */
      batchMode?: number;
      /**
       * Format: int32
       * @description 产线类型
       */
      businessType?: number;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 路口类型 */
      crossType?: string;
      /** @description 路口类型描述 */
      crossTypeDesc?: string;
      /** @description 建图结果可视化地址 */
      dataVisualUrl?: string;
      datasetClip?: string;
      datasetName?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: int64 */
      flowId?: number;
      /**
       * Format: int32
       * @description 输入覆盖路径数
       */
      inputRouteNum?: number;
      /**
       * Format: int64
       * @description 任务编号
       */
      mappingTaskId?: number;
      /** @description 任务名称 */
      mappingTaskName?: string;
      /** @description 任务类型 */
      mappingTaskType?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 采集完成路径数
       */
      routeCollectedCount?: number;
      /**
       * Format: int32
       * @description 路径总数
       */
      routeTotalCount?: number;
      /** @description 任务来源 */
      sourceType?: string;
      /**
       * Format: date-time
       * @description 任务创建时间
       */
      startTime?: string;
      /** @description 执行状态 */
      status?: string;
    };
    /** 融合任务名称实体类 */
    "融合任务名称实体类": {
      /**
       * Format: int32
       * @description 融合任务ID
       */
      subtaskId?: number;
      /** @description 融合任务名称 */
      subtaskName?: string;
    };
    /** 融合任务设置NDS版本号请求实体 */
    "融合任务设置NDS版本号请求实体": {
      /** @description nds版本号 */
      ndsVsn?: string;
      /**
       * Format: int32
       * @description 融合任务ID
       */
      subtaskId?: number;
    };
    /** 路口实体类 */
    "路口实体类": {
      /** @description 行政编号 */
      adminCode?: string;
      /** Format: int64 */
      batchId?: number;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 路口描述 */
      descName?: string;
      /** Format: int32 */
      kind?: number;
      /** @description 路口点位坐标 */
      locationWkt?: string;
      /** Format: int64 */
      mainNode?: number;
      /** @description 路口图幅号 */
      mesh?: string;
      paths?: string;
      /** Format: int64 */
      projectId?: number;
      regionWkt?: string;
      status?: string;
      /**
       * Format: int32
       * @description 路口标签
       */
      tag?: number;
      /** Format: int32 */
      type?: number;
    };
    /** 路口查询条件实体类 */
    "路口查询条件实体类": {
      /** @description 城市编号 */
      adminCode?: string;
      /** Format: int64 */
      batchId?: number;
      /** Format: int32 */
      businessType?: number;
      /** @description 路口编号 */
      crossId?: string;
      /** @description 路口编号列表 */
      crossIdList?: string[];
      /** @description 路口版本 */
      crossVsn?: string;
      /**
       * Format: date-time
       * @description 路口创建时间查询的结束时间
       */
      endTime?: string;
      /** @description 图幅列表 */
      meshList?: number[];
      orderBy?: string;
      /** Format: int32 */
      pageNo?: number;
      /** Format: int32 */
      pageSize?: number;
      /** @description 空间检索多边形,wkt格式字符串 */
      polygonWkt?: string;
      /** Format: int64 */
      projectId?: number;
      /**
       * Format: date-time
       * @description 路口创建时间查询的开始时间
       */
      startTime?: string;
      /**
       * Format: int32
       * @description 路口类型,位图值
       */
      tag?: number;
    };
    /** 配置参数类 */
    "配置参数类": {
      /**
       * Format: int32
       * @description 生产模式
       */
      businessType?: number;
      /**
       * Format: int64
       * @description 参数编号
       */
      id?: number;
      /** @description 操作员 */
      operator?: string;
      /** @description 参数描述 */
      paramDesc?: string;
      /** @description 参数名称 */
      paramName?: string;
      /** @description 参数类型 */
      paramType?: string;
      /** @description 参数值 */
      paramValue?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
      /** @description 参数值类型 */
      valueType?: string;
    };
    /** 项目实体类 */
    "项目实体类": {
      /**
       * Format: date-time
       * @description 创建时间
       */
      createTime?: string;
      /** @description 操作员 */
      operator?: string;
      /** @description 项目描述 */
      projectDesc?: string;
      /**
       * Format: int64
       * @description 项目编号
       */
      projectId?: number;
      /** @description 项目名称 */
      projectName?: string;
      /**
       * Format: int32
       * @description 场景类型
       */
      siteKind?: number;
      /** @description 执行状态 */
      status?: string;
      /**
       * Format: date-time
       * @description 更新时间
       */
      updateTime?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** error */
  errorUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingPUT: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingDELETE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingOPTIONS: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingHEAD: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingPATCH: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** error */
  errorUsingTRACE: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** 按MSS协议添加场景 */
  addMssCrossUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateProduceTaskMsg"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«BatchCross»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景下线 */
  cleanCrossUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CleanCrossReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«int»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建批次 */
  createUsingPOST: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          /** @description 批次描述 */
          batchDesc?: string;
          /**
           * Format: binary
           * @description 批次文件
           */
          batchFile?: string;
          /**
           * Format: int64
           * @description 批次编号，仅更新时提供
           */
          batchId?: number;
          /** @description 批次编号，仅批量更新时提供 */
          batchIds?: string;
          /** @description 批次名 */
          batchName?: string;
          /**
           * Format: int32
           * @description 生产模式
           */
          businessType?: number;
          /** @description 批次配置 */
          configParam?: string;
          fileContent?: string;
          /** @description 操作员 */
          operator?: string;
          /** @description 流程列表 */
          processList?: string;
          /**
           * Format: int64
           * @description 项目编号
           */
          projectId?: number;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
          "multipart/form-data": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询批次列表 */
  queryUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["批次查询实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«批次实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询批次中路口列表 */
  queryCrossUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchCrossQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«批次路口实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 场景终止生产 */
  terminateCrossUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CleanCrossReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«int»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 为场景转移批次 */
  transferCrossUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["TransferCrossReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«int»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 更新批次设置 */
  updateBatchUsingPOST: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          /** @description 批次描述 */
          batchDesc?: string;
          /**
           * Format: binary
           * @description 批次文件
           */
          batchFile?: string;
          /**
           * Format: int64
           * @description 批次编号，仅更新时提供
           */
          batchId?: number;
          /** @description 批次编号，仅批量更新时提供 */
          batchIds?: string;
          /** @description 批次名 */
          batchName?: string;
          /**
           * Format: int32
           * @description 生产模式
           */
          businessType?: number;
          /** @description 批次配置 */
          configParam?: string;
          fileContent?: string;
          /** @description 操作员 */
          operator?: string;
          /** @description 流程列表 */
          processList?: string;
          /**
           * Format: int64
           * @description 项目编号
           */
          projectId?: number;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«批次实体类»"];
          "multipart/form-data": components["schemas"]["ResponseVo«批次实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 更新路口 */
  updateCrossUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdateBatchCrossReq"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«string»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发PN/PSP采集任务 */
  createPnPspCollectTaskUsingGET: {
    parameters: {
      query: {
        /** @description crossId */
        crossId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«boolean»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询路口列表 */
  queryUsingPOST_2: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchCrossQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«批次路口实体类»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询资料列表 */
  queryUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CollectMaterialQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«CollectMaterialVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发资料补采任务 */
  reCreateCollectTaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["创建资料补采实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«boolean»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发资料扫描 */
  triggerCollectMaterialScanUsingGET: {
    parameters: {
      query: {
        /** @description endTime */
        endTime: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发资料扫描 */
  triggerCollectMaterialScanUsingPOST: {
    parameters: {
      query: {
        /** @description endTime */
        endTime: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建配置参数 */
  createUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["配置参数类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«配置参数类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询指定生产模式的环节列表 */
  queryProcessListUsingGET: {
    parameters: {
      path: {
        /** @description produceMode */
        produceMode: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询指定生产模式默认的配置参数列表 */
  queryPublicUsingGET: {
    parameters: {
      path: {
        /** @description produceMode */
        produceMode: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["ResponseVo«List«配置参数类»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询配置参数列表 */
  queryUsingGET: {
    parameters: {
      path: {
        /** @description groupName */
        groupName: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["ResponseVo«List«配置参数类»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** query */
  queryUsingGET_1: {
    parameters: {
      path: {
        /** @description id */
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«路口实体类»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** query */
  queryUsingPOST_3: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["路口查询条件实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«路口实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** triggerSiteFenceAndVector */
  triggerSiteFenceAndVectorUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** upsert */
  upsertUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["路口实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«int»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** scanNewTransferData */
  scanNewTransferDataUsingGET: {
    parameters: {
      query: {
        /** @description batchId */
        batchId?: number;
        /** @description startCreateDate */
        startCreateDate: string;
        /** @description endCreateDate */
        endCreateDate: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建批量推理打分任务 */
  createBatchUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchInferEvalTask"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«BatchInferEvalTask»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量推理打分任务详情 */
  detailUsingPOST: {
    parameters: {
      query: {
        /** @description batchInferEvalTaskId */
        batchInferEvalTaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«BatchInferEvalTask»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量推理打分任务明细列表 */
  batchDetailListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchInferEvalTaskDetailQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«BatchInferEvalTaskDetailVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量推理打分任务列表 */
  batchListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchInferEvalTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«BatchInferEvalTask»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量推理打分结果转移至合规环境 */
  transferInferEvalResultUsingPOST: {
    parameters: {
      query: {
        /** @description batchInferEvalTaskId */
        batchInferEvalTaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«BatchInferEvalTask»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建推理打分对比任务 */
  inferEvalStatisticsUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["InferEvalCompareTask"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 推理打分对比结果列表 */
  selectInferEvalCompareResultListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["InferEvalCompareResultQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«InferEvalCompareResultVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 数据管理数据送表列表接口 */
  annotationSelectListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["AnnotationSelectQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«AnnotationSelectVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 送表数据源ID列表接口 */
  annotationStreamsourceUuidListUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 修改标注预算UUID */
  updateBudgetUsingPOST: {
    parameters: {
      query: {
        /** @description budgetUuid */
        budgetUuid: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 修改标注任务ID */
  updateStreamTaskUsingPOST: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": components["schemas"]["ResponseVo«List«配置参数类»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建批量送标任务 */
  createBatchAnnotationUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["批量路口送标任务创建实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量路口刷库批次列表 */
  batchMappingTaskListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchMappingTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«BatchMappingTaskVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量刷库任务取消 */
  cancelTaskUsingGET: {
    parameters: {
      query: {
        /** @description batchMappingTaskId */
        batchMappingTaskId: number;
        /** @description mappingTaskId */
        mappingTaskId?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量刷库任务取消 */
  cancelTaskUsingPOST: {
    parameters: {
      query: {
        /** @description batchMappingTaskId */
        batchMappingTaskId: number;
        /** @description mappingTaskId */
        mappingTaskId?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建批量路口刷库任务 */
  createBatchMappingTaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["批量路口刷库任务创建实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量刷库任务失败原地重试 */
  retryFailedInplaceUsingGET: {
    parameters: {
      query: {
        /** @description batchMappingTaskId */
        batchMappingTaskId: number;
        /** @description mappingTaskId */
        mappingTaskId?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量刷库任务失败原地重试 */
  retryFailedInplaceUsingPOST: {
    parameters: {
      query: {
        /** @description batchMappingTaskId */
        batchMappingTaskId: number;
        /** @description mappingTaskId */
        mappingTaskId?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 批量路口刷库刷库任务列表 */
  batchMappingSubTaskListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["BatchMappingSubTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«BatchMappingSubTaskVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取点云建图任务的CrossInformation.json文件内容 */
  getCrossInformationUsingGET: {
    parameters: {
      path: {
        /** @description taskId */
        taskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json;charset=UTF-8": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 导出最新的点云建图数据集列表 */
  exportLatestPerceptionResultUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取最新模型建图及上游点云建图的数据集信息 */
  getLatestModelDatasetByCrossUsingGET: {
    parameters: {
      path: {
        /** @description crossId */
        crossId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,string»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 按路口查询有效建图结果 */
  getValidResultsByCrossUsingGET: {
    parameters: {
      path: {
        /** @description mappingTaskType */
        mappingTaskType: string;
        /** @description crossId */
        crossId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["MappingResult"][];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 数据管理列表接口 */
  produceDataListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["MappingResultQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«数据管理实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 只查询建图结果接口 */
  listDataUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["MappingResultQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«数据管理实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 按变化源编号查询建图任务信息 */
  getMappingTaskByDiffIdUsingGET: {
    parameters: {
      path: {
        /** @description diffId */
        diffId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«MappingTask»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 建图任务列表接口 */
  listMappingTaskVoUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["MappingTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«生产流程任务信息实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 建图任务列表接口 */
  listMappingTaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["MappingTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«MappingTask»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 建图任务失败重试 */
  retryFailedAutoTaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["建图任务重试请求实体"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取融合任务名列表 */
  getMergeTaskNameListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«融合任务名称实体类»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建融合回退任务 */
  createMergeBackSubtaskUsingPOST: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          /**
           * Format: binary
           * @description 追加的变化源ID
           */
          appendOldDiffIdFile?: string;
          appendOldDiffIdList?: string[];
          /** @description base融合任务 */
          baseTask?: string;
          /**
           * Format: int32
           * @description base版本准出但新版本未准出的路径数量<=
           */
          baseValidRouteNum?: number;
          /**
           * Format: double
           * @description base版本准出但新版本未准出路径数量占比<=
           */
          baseValidRouteRate?: number;
          /** @description 批次编号列表字符串，英文逗号分隔 */
          batchList?: string;
          /**
           * Format: int32
           * @description 融合产线类型
           */
          businessType?: number;
          /** @description 城市名称列表字符串，英文逗号分隔 */
          cityList?: string;
          /** @description 对比后数据筛选模式 */
          compareSelectType?: string;
          /** Format: date-time */
          createTime?: string;
          /** @description 建图实体编号字符串，多个用英文逗号分隔 */
          crossIdList?: string;
          /**
           * Format: int32
           * @description 路口总量
           */
          crossNum?: number;
          crossStatistics?: string;
          /** @description 路口类型编号列表字符串，英文逗号分隔 */
          crossTypeList?: string;
          /**
           * Format: int32
           * @description 新版本准出但base版本未准出的路径数量>=
           */
          curValidRouteNum?: number;
          /**
           * Format: double
           * @description 新版本准出但base版本未准出的路径数数量占比>=
           */
          curValidRouteRate?: number;
          /**
           * Format: binary
           * @description 需要删除的变化源ID
           */
          deleteNewDiffIdFile?: string;
          deleteNewDiffIdList?: string[];
          /** @description 推理打分算法版本 */
          evalAlgVsn?: string;
          execEnv?: string;
          /** @description 推理算法版本 */
          inferAlgVsn?: string;
          /** @description 推理打分任务ID */
          inferevalTaskId?: string;
          /** @description ndsVsn版本号 */
          ndsVsn?: string;
          operator?: string;
          /** @description 项目编号列表字符串，英文逗号分隔 */
          projectIdList?: string;
          /** @description 融合状态 */
          status?: string;
          /** @description 融合任务描述 */
          subtaskDesc?: string;
          /**
           * Format: int32
           * @description 融合任务ID
           */
          subtaskId?: number;
          /** @description 融合任务名称 */
          subtaskName?: string;
          taskName?: string;
          /** @description 融合流程配置 */
          tmsConfig?: string;
          tmsTaskId?: string;
          /** Format: date-time */
          updateTime?: string;
          /** @description 是否启动推理打分对比及路口替换 */
          useCompare?: boolean;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
          "multipart/form-data": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 创建融合任务 */
  createMergeSubtaskUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["创建融合任务实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 融合任务路口明细列表 */
  queryCrossMergeSubtaskListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["批量融合任务查询实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«批量融合路口任务明细实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获得融合流程配置字段 */
  getTmsFieldsUsingGET: {
    parameters: {
      path: {
        /** @description bizType */
        bizType: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 融合任务列表 */
  mergeSubtaskListUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["批量融合任务查询实体类"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«批量融合任务实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 设置NDS版本号 */
  setNdsVsnUsingPOST: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["融合任务设置NDS版本号请求实体"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发融合任务状态重置，手扶操作 */
  triggerMergeRevertUsingGET: {
    parameters: {
      query: {
        /** @description subtaskId */
        subtaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发融合任务状态重置，手扶操作 */
  triggerMergeRevertUsingPOST: {
    parameters: {
      query: {
        /** @description subtaskId */
        subtaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发融合筛选任务，手扶操作 */
  triggerMergeSelectUsingGET: {
    parameters: {
      query: {
        /** @description subtaskId */
        subtaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发融合筛选任务，手扶操作 */
  triggerMergeSelectUsingPOST: {
    parameters: {
      query: {
        /** @description subtaskId */
        subtaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发融合任务 */
  triggerMergeTaskUsingGET: {
    parameters: {
      query: {
        /** @description subtaskId */
        subtaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发融合任务 */
  triggerMergeTaskUsingPOST: {
    parameters: {
      query: {
        /** @description subtaskId */
        subtaskId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingDELETE: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_2: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingDELETE_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description No Content */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_3: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_4: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_5: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_6: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_7: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_8: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_9: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_10: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_11: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/octet-stream": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_12: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_13: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_14: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingPOST: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
        "application/vnd.spring-boot.actuator.v2+json": {
          [key: string]: string;
        };
        "application/vnd.spring-boot.actuator.v3+json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": Record<string, never>;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_15: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_16: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_17: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_18: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain;version=0.0.4;charset=utf-8": Record<string, never>;
          "application/openmetrics-text;version=1.0.0;charset=utf-8": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingPOST_1: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_19: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** handle */
  handleUsingGET_20: {
    requestBody?: {
      content: {
        "application/json": {
          [key: string]: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain;charset=UTF-8": Record<string, never>;
          "application/json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v3+json": Record<string, never>;
          "application/vnd.spring-boot.actuator.v2+json": Record<string, never>;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 按变化源编号获得感知建图任务 */
  getPerceptionByDiffIdUsingGET: {
    parameters: {
      path: {
        /** @description diffSourceId */
        diffSourceId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«MappingTask»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 触发变化源入库 */
  submitDiffUsingGET: {
    parameters: {
      path: {
        /** @description mappingResultId */
        mappingResultId: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询生产任务列表 */
  queryUsingPOST_4: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ProduceTaskQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«生产任务信息类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询分城市路口交付数 */
  getCityCrossNumUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«StatCityCrossNumVo»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 分城市查询路口交付进度 */
  getCityCrossNumByProcessUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«StatCityNumVo»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询汇总路口交付数 */
  getCrossNumByCityLevelUsingGET: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,List«StatCityCrossNumVo»»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询汇总路口交付数 */
  getCrossNumByCityLevelUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«Map«string,List«StatCityCrossNumVo»»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询任务进度明细 */
  getDailyTaskNumUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«StatDailyTaskNumVo»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询汇总路口交付数 */
  getTotalCrossNumUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«StatCityCrossNumVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询路口交付进度 */
  getTotalCrossNumByProcessUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«StatNumByProgressVo»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询任务处理进度 */
  getTotalTaskNumByProcessUsingPOST: {
    parameters: {
      query?: {
        /** @description 批次编号列表 */
        batchIdList?: number[];
        /** @description 生产模式 */
        bizType?: number;
        /** @description 城市编码列表，例如：3101 */
        cityCodeList?: string[];
        /** @description 城市分类 */
        cityLevel?: number;
        /** @description 城市名列表 */
        cityNameList?: string[];
        /** @description 结束时间 */
        endTime?: string;
        flushCache?: boolean;
        /** @description 环节名称 */
        processKey?: string;
        /** @description 项目编号 */
        projectId?: number;
        /** @description 开始时间 */
        startTime?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«StatNumByProgressVo»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 查询项目列表 */
  queryUsingPOST_5: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ProjectQuery"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageVo«项目实体类»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 路口任务履历 */
  queryUsingGET_2: {
    parameters: {
      query: {
        /** @description projectId */
        projectId?: number;
        /** @description batchId */
        batchId?: number;
        /** @description crossId */
        crossId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«TaskHistoryVo»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 路口任务履历 */
  queryUsingPOST_6: {
    parameters: {
      query: {
        /** @description projectId */
        projectId?: number;
        /** @description batchId */
        batchId?: number;
        /** @description crossId */
        crossId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«TaskHistoryVo»»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** oauth2登录回调地址 */
  authorizeCallbackUsingGET: {
    parameters: {
      query: {
        /** @description code */
        code: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 按月导出采集资料uuid */
  exportMonthlyMaterialUuidUsingGET: {
    parameters: {
      path: {
        /** @description month */
        month: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 按月导出点云建图数据 */
  exportMonthlyPerceptionResultUsingGET: {
    parameters: {
      path: {
        /** @description month */
        month: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取产线列表接口 */
  getBusinessTypeListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«object»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 解析CI文件 */
  parseCIByTaskIdUsingGET: {
    parameters: {
      path: {
        /** @description taskId */
        taskId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取城市列表 */
  getCityListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«DimCity»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取当前推理打分算法版本 */
  getCurrentEvalAlgVsnUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«string»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取推理打分算法版本列表 */
  getEvalAlgVsnListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«string»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取推理算法版本列表 */
  getInferAlgVsnListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«List«string»»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取融合类型接口 */
  getMergeLineListUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«object»"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** inferEvalRefreshResult */
  inferEvalRefreshResultUsingPOST: {
    parameters: {
      query: {
        /** @description inputFileKey */
        inputFileKey: string;
        /** @description evalAlgVsn */
        evalAlgVsn: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«string»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** 获取点云建图任务输入 */
  parseKwargsByAipInputUsingPOST: {
    requestBody?: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ResponseVo«CrossmapKwargsVo»"];
        };
      };
      /** @description Created */
      201: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
  /** links */
  linksUsingGET: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            [key: string]: Record<string, never>;
          };
          "application/vnd.spring-boot.actuator.v3+json": {
            [key: string]: Record<string, never>;
          };
          "application/vnd.spring-boot.actuator.v2+json": {
            [key: string]: Record<string, never>;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not Found */
      404: {
        content: never;
      };
    };
  };
}
